{"ast":null,"code":"import _regeneratorRuntime from\"/Users/dea/Code/Projects/react_foodfacts2/deployment/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/dea/Code/Projects/react_foodfacts2/deployment/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/dea/Code/Projects/react_foodfacts2/deployment/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"/Users/dea/Code/Projects/react_foodfacts2/deployment/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";//api creds - to move! \nvar appId=\"2b9c56f8\";var apiKey=\"4b2d3c98a882d580d432b28e9fd6c748\";//fetch the raw api data \nfunction getData(_x){return _getData.apply(this,arguments);}function _getData(){_getData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(foodName){var apiUrl,_yield$axios$get,rawData,foodLabel,parsed,_parsed,nutrients;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;apiUrl=\"https://api.edamam.com/api/food-database/v2/parser?ingr=\".concat(foodName,\"&app_id=\").concat(appId,\"&app_key=\").concat(apiKey);_context.next=4;return axios.get(apiUrl);case 4:_yield$axios$get=_context.sent;rawData=_yield$axios$get.data;foodLabel=rawData.text,parsed=rawData.parsed;_parsed=_slicedToArray(parsed,1),nutrients=_parsed[0].food.nutrients;return _context.abrupt(\"return\",_objectSpread({food:foodLabel},nutrients));case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);console.log(_context.t0);return _context.abrupt(\"return\",{});case 15:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));return _getData.apply(this,arguments);};export default getData;","map":{"version":3,"sources":["/Users/dea/Code/Projects/react_foodfacts2/deployment/client/src/Functionality/api.js"],"names":["axios","appId","apiKey","getData","foodName","apiUrl","get","rawData","data","foodLabel","text","parsed","nutrients","food","console","log"],"mappings":"osBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA,GAAMC,CAAAA,KAAK,CAAG,UAAd,CACA,GAAMC,CAAAA,MAAM,CAAG,kCAAf,CAEA;QACeC,CAAAA,O,iIAAf,iBAAuBC,QAAvB,yMAEUC,MAFV,mEAE8ED,QAF9E,oBAEiGH,KAFjG,qBAEkHC,MAFlH,wBAGkCF,CAAAA,KAAK,CAACM,GAAN,CAAUD,MAAV,CAHlC,uCAGiBE,OAHjB,kBAGWC,IAHX,CAIiBC,SAJjB,CAIsCF,OAJtC,CAIWG,IAJX,CAI4BC,MAJ5B,CAIsCJ,OAJtC,CAI4BI,MAJ5B,wBAKkCA,MALlC,IAKmBC,SALnB,YAKYC,IALZ,CAKmBD,SALnB,gDAMYC,IAAI,CAAEJ,SANlB,EAMgCG,SANhC,6DAQIE,OAAO,CAACC,GAAR,cARJ,gCASW,EATX,uE,0CAWC,CAED,cAAeZ,CAAAA,OAAf","sourcesContent":["import axios from \"axios\";\n\n//api creds - to move! \nconst appId = \"2b9c56f8\"\nconst apiKey = \"4b2d3c98a882d580d432b28e9fd6c748\"\n\n//fetch the raw api data \nasync function getData(foodName){\n  try {\n    const apiUrl = `https://api.edamam.com/api/food-database/v2/parser?ingr=${foodName}&app_id=${appId}&app_key=${apiKey}`;\n    const {data: rawData} = await axios.get(apiUrl);\n    const {text: foodLabel, parsed} = rawData\n    const [{food: {nutrients}}] = parsed \n    return {food: foodLabel, ...nutrients};\n  } catch (error) {\n    console.log(error);    \n    return {}; \n  }\n};\n\nexport default getData; "]},"metadata":{},"sourceType":"module"}