{"ast":null,"code":"var _jsxFileName = \"/Users/dea/Code/Projects/react_foodfacts2/experimental/client/src/Components/RadarChart.js\";\nimport React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\nimport { ResponsiveRadar } from '@nivo/radar';\nconst data = [{\n  \"taste\": \"fruity\",\n  \"chardonay\": 33,\n  \"carmenere\": 118,\n  \"syrah\": 90\n}, {\n  \"taste\": \"bitter\",\n  \"chardonay\": 48,\n  \"carmenere\": 116,\n  \"syrah\": 109\n}, {\n  \"taste\": \"heavy\",\n  \"chardonay\": 97,\n  \"carmenere\": 44,\n  \"syrah\": 99\n}, {\n  \"taste\": \"strong\",\n  \"chardonay\": 80,\n  \"carmenere\": 99,\n  \"syrah\": 81\n}, {\n  \"taste\": \"sunny\",\n  \"chardonay\": 118,\n  \"carmenere\": 72,\n  \"syrah\": 73\n}];\n\nfunction MyResponsiveRadar(props) {\n  const useStyles = makeStyles({\n    root: {\n      maxWidth: 600,\n      minWidth: 290,\n      height: 500,\n      //paddingBottom: 80\n      background: '#3f3b3b',\n      color: 'white',\n      opacity: 0.90\n    }\n  });\n  const styles = useStyles(); //array of the current foods \n\n  function getFoods(data) {\n    return Object.keys(data).filter(el => el !== \"nutrient\" && el !== \"max\" && el !== \"calories\");\n  }\n\n  const currentFoods = getFoods(props.data[0]);\n  const fills = [\"#f35588\", \"#71a95a\", \"#14b1ab\", \"#e8505b\", \"#f9d56e\"];\n  const colors = {\n    [currentFoods[0]]: \"#DB5375\",\n    [currentFoods[1]]: \"#EC9192\",\n    [currentFoods[2]]: \"#f8dc88\",\n    [currentFoods[3]]: \"#B5BD89\",\n    [currentFoods[4]]: \"#729EA1\"\n  };\n\n  const getColor = bar => colors[bar.id];\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: styles.root,\n    elevation: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 18\n    }\n  }, \"Nutritional comparison\")), /*#__PURE__*/React.createElement(ResponsiveRadar, {\n    data: props.data.slice(1),\n    keys: currentFoods,\n    indexBy: \"nutrient\",\n    maxValue: \"auto\",\n    margin: {\n      top: 40,\n      right: 50,\n      bottom: 100,\n      left: 80\n    },\n    padding: 0.3,\n    curve: \"linearClosed\",\n    borderWidth: 2,\n    borderColor: {\n      from: 'color'\n    },\n    gridLevels: 5,\n    gridShape: \"circular\",\n    gridLabelOffset: 36,\n    enableDots: false,\n    dotSize: 10,\n    dotColor: {\n      theme: 'background'\n    },\n    dotBorderWidth: 0,\n    dotBorderColor: {\n      from: 'color'\n    },\n    enableDotLabel: true,\n    dotLabel: \"value\",\n    dotLabelYOffset: -12,\n    colors: {\n      scheme: 'nivo'\n    },\n    fillOpacity: 0.70,\n    blendMode: \"normal\",\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    isInteractive: true,\n    legends: [{\n      anchor: 'top-left',\n      direction: 'column',\n      translateX: -50,\n      translateY: -40,\n      itemWidth: 80,\n      itemHeight: 20,\n      itemTextColor: 'white',\n      symbolSize: 12,\n      symbolShape: 'circle',\n      effects: [{\n        on: 'hover',\n        style: {\n          itemTextColor: '#999'\n        }\n      }]\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default MyResponsiveRadar;","map":{"version":3,"sources":["/Users/dea/Code/Projects/react_foodfacts2/experimental/client/src/Components/RadarChart.js"],"names":["React","makeStyles","Card","CardContent","Typography","ResponsiveRadar","data","MyResponsiveRadar","props","useStyles","root","maxWidth","minWidth","height","background","color","opacity","styles","getFoods","Object","keys","filter","el","currentFoods","fills","colors","getColor","bar","id","slice","top","right","bottom","left","from","theme","scheme","anchor","direction","translateX","translateY","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","effects","on","style"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\nimport { ResponsiveRadar } from '@nivo/radar'\n\n\n\nconst data = [\n  {\n    \"taste\": \"fruity\",\n    \"chardonay\": 33,\n    \"carmenere\": 118,\n    \"syrah\": 90\n  },\n  {\n    \"taste\": \"bitter\",\n    \"chardonay\": 48,\n    \"carmenere\": 116,\n    \"syrah\": 109\n  },\n  {\n    \"taste\": \"heavy\",\n    \"chardonay\": 97,\n    \"carmenere\": 44,\n    \"syrah\": 99\n  },\n  {\n    \"taste\": \"strong\",\n    \"chardonay\": 80,\n    \"carmenere\": 99,\n    \"syrah\": 81\n  },\n  {\n    \"taste\": \"sunny\",\n    \"chardonay\": 118,\n    \"carmenere\": 72,\n    \"syrah\": 73\n  }\n]\n\nfunction MyResponsiveRadar(props){\n\n\n  const useStyles = makeStyles({\n    root: {\n      maxWidth: 600,\n      minWidth: 290,\n      height: 500,\n      //paddingBottom: 80\n      background: '#3f3b3b',\n      color: 'white',\n      opacity: 0.90,\n    }\n  })\n\n  const styles = useStyles();\n\n    //array of the current foods \n  \n    function getFoods(data){\n      return Object.keys(data).filter(el => el!==\"nutrient\"&&el!==\"max\"&&el!==\"calories\")\n    }\n    const currentFoods = getFoods(props.data[0])\n\n  \n    const fills = [\"#f35588\", \"#71a95a\", \"#14b1ab\", \"#e8505b\", \"#f9d56e\"];\n    const colors = { \n      [currentFoods[0]]: \"#DB5375\", \n      [currentFoods[1]]: \"#EC9192\", \n      [currentFoods[2]]: \"#f8dc88\", \n      [currentFoods[3]]: \"#B5BD89\",\n      [currentFoods[4]]: \"#729EA1\",\n    }\n    const getColor = bar => colors[bar.id]\n\n\n  return(\n    <Card className={styles.root} elevation={6}>\n    <CardContent><Typography variant=\"h5\">Nutritional comparison</Typography></CardContent>\n    <ResponsiveRadar\n        data={props.data.slice(1)}\n        keys={currentFoods}\n        indexBy=\"nutrient\"\n        maxValue=\"auto\"\n        margin={{ top: 40, right: 50, bottom: 100, left: 80 }}\n        padding={0.3}\n        curve=\"linearClosed\"\n        borderWidth={2}\n        borderColor={{ from: 'color' }}\n        gridLevels={5}\n        gridShape=\"circular\"\n        gridLabelOffset={36}\n        enableDots={false}\n        dotSize={10}\n        dotColor={{ theme: 'background' }}\n        dotBorderWidth={0}\n        dotBorderColor={{ from: 'color' }}\n        enableDotLabel={true}\n        dotLabel=\"value\"\n        dotLabelYOffset={-12}\n        colors={{ scheme: 'nivo' }}\n        fillOpacity={0.70}\n        blendMode=\"normal\"\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n        isInteractive={true}\n        legends={[\n            {\n                anchor: 'top-left',\n                direction: 'column',\n                translateX: -50,\n                translateY: -40,\n                itemWidth: 80,\n                itemHeight: 20,\n                itemTextColor: 'white',\n                symbolSize: 12,\n                symbolShape: 'circle',\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemTextColor: '#999'\n                        }\n                    }\n                ]\n            }\n        ]}\n/>\n</Card>\n) \n}\n\n\nexport default MyResponsiveRadar; \n\n   "]},"metadata":{},"sourceType":"module"}