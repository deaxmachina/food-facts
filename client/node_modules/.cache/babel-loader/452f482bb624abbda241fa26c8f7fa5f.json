{"ast":null,"code":"var _jsxFileName = \"/Users/dea/Code/Projects/react_foodfacts2/complete/src/App.js\";\nimport React, { useState } from \"react\";\nimport { Input, Typography, Button, Card, Paper, Grid, createMuiTheme, ThemeProvider, createGenerateClassName } from \"@material-ui/core\";\nimport styles from \"./App.module.css\";\nimport Header from \"./Components/Header\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport SearchBox from \"./Components/SearchBox\";\nimport Table from \"./Components/Table\";\nimport ImgMediaCard from \"./Components/ImgMediaCard\";\nimport Chart from \"./Components/Chart\";\nimport getData from \"./Functionality/api\";\nimport dataTrasform from \"./Functionality/data\"; //utility function \n\nfunction isNotEmpty(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) return true;\n  }\n\n  return false;\n}\n\nfunction App() {\n  /* FUNCTIONALITY */\n\n  /*** Data handling functionality ***/\n  const [userInput, setUserInput] = useState(\"\"); //user input into the search for food form\n\n  const [foodNames, setFoodNames] = useState([]); //current list of food names\n\n  const [foodData, setFoodData] = useState([]); //current list of food data\n\n  const [selectedFoodData, setSelectedFoodData] = useState([]); //list of selected food data \n\n  const [foodTransformed, setFoodTransformed] = useState([{\n    nutrient: \"fat\",\n    apple: 0.17,\n    banana: 0.33,\n    kiwi: 50.52,\n    max: 0.52\n  }, {\n    nutrient: \"carbs\",\n    apple: 13.81,\n    banana: 22.84,\n    kiwi: 74.66,\n    max: 22.84\n  }, {\n    nutrient: \"proteins\",\n    apple: 0.26,\n    banana: 81.09,\n    kiwi: 1.14,\n    max: 1.14\n  }, {\n    nutrient: \"fiber\",\n    apple: 2.4,\n    banana: 82.6,\n    kiwi: 3,\n    max: 3\n  }]); // keep track of the current user input into input field\n\n  function handleUserInput(event) {\n    const input = event.target.value;\n    setUserInput(input);\n  } //get food info button clicked -> get nutrition data from api and save it in foodNames and foodData\n\n\n  async function keepFoods() {\n    try {\n      const nutrients = await getData(userInput);\n\n      if (isNotEmpty(nutrients)) {\n        if (!foodNames.includes(userInput)) {\n          setFoodNames(prevItem => {\n            return [...foodNames, userInput];\n          });\n          setFoodData(prevItem => {\n            return [...foodData, nutrients];\n          });\n        } else {\n          setFoodNames(foodNames);\n          setFoodData(foodData);\n        }\n      }\n    } catch (error) {\n      console.log(\"Missing food\");\n    }\n\n    setUserInput(\"\");\n  }\n\n  ; // see if the checkbox next to each item is checked \n  // if checked, keep the fooddata in the selectedFoodData state; else delete it from there\n\n  function handleChecked(event, foodId) {\n    if (event.target.checked) {\n      keepSelectedFoods(foodId);\n    } else {\n      setSelectedFoodData(prevItems => {\n        return prevItems.filter((item, index) => {\n          const currentFood = foodNames[foodId];\n          const currentFoodData = foodData.find(x => x.food === currentFood);\n          return item !== currentFoodData;\n        });\n      });\n    }\n\n    ;\n  }\n\n  ; //keep list of clicked (checked) foods, without repetition\n\n  function keepSelectedFoods(foodId) {\n    const currentFood = foodNames[foodId];\n    const currentFoodData = foodData.find(x => x.food === currentFood);\n    setSelectedFoodData(prevItems => {\n      if (!prevItems.includes(currentFoodData)) {\n        return [...prevItems, currentFoodData];\n      } else {\n        return prevItems;\n      }\n    });\n  }\n\n  ; // transform the data into format expected by chart\n\n  function handleDataTransform() {\n    const foodDataTransformed = dataTrasform(selectedFoodData);\n    setFoodTransformed(foodDataTransformed);\n  }\n\n  console.log(foodTransformed);\n  /* THEME */\n\n  const [darkMode, setDarkMode] = useState(true);\n  const theme = createMuiTheme({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\"\n    }\n  });\n  const useStyles = makeStyles({\n    root: {\n      margin: 0,\n      padding: 0,\n      height: \"100%\",\n      background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\"\n    }\n  });\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    square: true,\n    elevation: 0,\n    height: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    darkMode: darkMode,\n    setDarkMode: setDarkMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SearchBox, {\n    handleUserInput: handleUserInput,\n    userInput: userInput,\n    keepFoods: keepFoods,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    spacing: 4,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    sm: 8,\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ImgMediaCard, {\n    data: foodData,\n    handleChecked: handleChecked,\n    handleDataTransform: handleDataTransform,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    sm: 8,\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    data: foodTransformed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }))))));\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/dea/Code/Projects/react_foodfacts2/complete/src/App.js"],"names":["React","useState","Input","Typography","Button","Card","Paper","Grid","createMuiTheme","ThemeProvider","createGenerateClassName","styles","Header","makeStyles","useTheme","SearchBox","Table","ImgMediaCard","Chart","getData","dataTrasform","isNotEmpty","obj","key","hasOwnProperty","App","userInput","setUserInput","foodNames","setFoodNames","foodData","setFoodData","selectedFoodData","setSelectedFoodData","foodTransformed","setFoodTransformed","nutrient","apple","banana","kiwi","max","handleUserInput","event","input","target","value","keepFoods","nutrients","includes","prevItem","error","console","log","handleChecked","foodId","checked","keepSelectedFoods","prevItems","filter","item","index","currentFood","currentFoodData","find","x","food","handleDataTransform","foodDataTransformed","darkMode","setDarkMode","theme","palette","type","useStyles","root","margin","padding","height","background","classes"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport { Input, Typography, Button, Card, Paper, Grid, createMuiTheme, ThemeProvider, createGenerateClassName } from \"@material-ui/core\";\nimport styles from \"./App.module.css\";\nimport Header from \"./Components/Header\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport SearchBox from \"./Components/SearchBox\";\nimport Table from \"./Components/Table\";\nimport ImgMediaCard from \"./Components/ImgMediaCard\";\nimport Chart from \"./Components/Chart\";\n\nimport getData from \"./Functionality/api\";\nimport dataTrasform from \"./Functionality/data\";\n\n//utility function \nfunction isNotEmpty(obj) {\n  for(var key in obj) {\n      if(obj.hasOwnProperty(key))\n          return true;\n  }\n  return false;\n}\n\n\nfunction App() {\n\n  /* FUNCTIONALITY */\n\n  /*** Data handling functionality ***/\n\n  const [userInput, setUserInput] = useState(\"\"); //user input into the search for food form\n  const [foodNames, setFoodNames] = useState([]); //current list of food names\n  const [foodData, setFoodData] = useState([]); //current list of food data\n  const [selectedFoodData, setSelectedFoodData] = useState([]); //list of selected food data \n  const [foodTransformed, setFoodTransformed] = useState([\n    {nutrient: \"fat\", apple: 0.17, banana: 0.33, kiwi: 50.52, max: 0.52},\n    {nutrient: \"carbs\", apple: 13.81, banana: 22.84, kiwi: 74.66, max: 22.84},\n    {nutrient: \"proteins\", apple: 0.26, banana: 81.09, kiwi: 1.14, max: 1.14},\n    {nutrient: \"fiber\", apple: 2.4, banana: 82.6, kiwi: 3, max: 3}\n  ]);\n\n\n  // keep track of the current user input into input field\n  function handleUserInput(event){\n    const input = event.target.value;\n    setUserInput(input);\n  }\n\n  //get food info button clicked -> get nutrition data from api and save it in foodNames and foodData\n  async function keepFoods(){\n    try {\n      const nutrients = await(getData(userInput));\n      if (isNotEmpty(nutrients)){\n        if (!foodNames.includes(userInput)){\n          setFoodNames(prevItem => {\n            return [...foodNames, userInput]\n          });\n          setFoodData(prevItem => {\n            return [...foodData, nutrients]\n          })\n        } else {\n          setFoodNames(foodNames);\n          setFoodData(foodData)\n        }\n      }\n\n    } catch (error) {\n      console.log(\"Missing food\")\n    }\n    setUserInput(\"\");\n  };\n\n   // see if the checkbox next to each item is checked \n  // if checked, keep the fooddata in the selectedFoodData state; else delete it from there\n  function handleChecked(event, foodId){\n    if (event.target.checked){\n      keepSelectedFoods(foodId)\n    } else {\n      setSelectedFoodData(prevItems => {\n        return prevItems.filter((item, index) => {\n          const currentFood = foodNames[foodId];\n          const currentFoodData = foodData.find(x => x.food === currentFood);\n          return item !== currentFoodData;\n        });\n      });\n    };\n  };\n\n  //keep list of clicked (checked) foods, without repetition\n  function keepSelectedFoods(foodId) {\n    const currentFood = foodNames[foodId];\n    const currentFoodData = foodData.find(x => x.food === currentFood);\n    setSelectedFoodData(prevItems => {\n      if (!prevItems.includes(currentFoodData)){\n        return [...prevItems, currentFoodData]\n      } else {\n        return prevItems\n      }\n    });\n  };\n\n  // transform the data into format expected by chart\n  function handleDataTransform(){\n    const foodDataTransformed = dataTrasform(selectedFoodData)\n    setFoodTransformed(foodDataTransformed);\n  }  \n\n  console.log(foodTransformed)\n\n  /* THEME */\n\n  const [darkMode, setDarkMode] = useState(true); \n  const theme = createMuiTheme({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\",\n    },\n  });\n\n  const useStyles = makeStyles({\n    root: {\n      margin: 0,\n      padding: 0,\n      height: \"100%\",\n      background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n    },\n  });\n\n  const classes = useStyles();\n\n\n\n  return(\n    <ThemeProvider theme={theme}>\n      <Paper className={classes.root} square={true} elevation={0} height=\"100%\">\n        <Grid container direction=\"column\" spacing={5}>\n\n          <Grid item>\n            <Header \n              darkMode={darkMode}\n              setDarkMode={setDarkMode}\n            />\n          </Grid>\n\n          <Grid item container justify=\"center\">\n            <SearchBox \n              handleUserInput={handleUserInput}\n              userInput={userInput}\n              keepFoods={keepFoods}\n            />\n          </Grid>\n\n          <Grid item container spacing={4} justify=\"center\">\n            <Grid item xs={10} sm={8} md={5}>\n              <ImgMediaCard \n                data={foodData}\n                handleChecked={handleChecked}\n                handleDataTransform={handleDataTransform}\n              />\n            </Grid>\n\n            <Grid item xs={10} sm={8} md={5}>\n              <Chart \n                data={foodTransformed}\n              />            \n            </Grid>\n              </Grid>\n\n        </Grid>\n      </Paper>\n    </ThemeProvider>\n  )\n};\n\nexport default App; "]},"metadata":{},"sourceType":"module"}