{"ast":null,"code":"import axios from \"axios\"; //api creds - to move! \n\nconst appId = \"2b9c56f8\";\nconst apiKey = \"4b2d3c98a882d580d432b28e9fd6c748\"; //fetch the raw api data \n\nasync function getData(foodName) {\n  try {\n    const apiUrl = `https://api.edamam.com/api/food-database/v2/parser?ingr=${foodName}&app_id=${appId}&app_key=${apiKey}`;\n    const {\n      data: rawData\n    } = await axios.get(apiUrl);\n    console.log(rawData);\n    const {\n      text: foodLabel,\n      parsed\n    } = rawData;\n    const [{\n      food: {\n        nutrients\n      }\n    }] = parsed;\n    return {\n      food: foodLabel,\n      ...nutrients\n    };\n  } catch (error) {\n    console.log(error);\n    return {};\n  }\n}\n\n;\nexport default getData;","map":{"version":3,"sources":["/Users/dea/Code/Projects/nutrition-dashboard/client/src/Functionality/api.js"],"names":["axios","appId","apiKey","getData","foodName","apiUrl","data","rawData","get","console","log","text","foodLabel","parsed","food","nutrients","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,KAAK,GAAG,UAAd;AACA,MAAMC,MAAM,GAAG,kCAAf,C,CAEA;;AACA,eAAeC,OAAf,CAAuBC,QAAvB,EAAgC;AAC9B,MAAI;AACF,UAAMC,MAAM,GAAI,2DAA0DD,QAAS,WAAUH,KAAM,YAAWC,MAAO,EAArH;AACA,UAAM;AAACI,MAAAA,IAAI,EAAEC;AAAP,QAAkB,MAAMP,KAAK,CAACQ,GAAN,CAAUH,MAAV,CAA9B;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,UAAM;AAACI,MAAAA,IAAI,EAAEC,SAAP;AAAkBC,MAAAA;AAAlB,QAA4BN,OAAlC;AACA,UAAM,CAAC;AAACO,MAAAA,IAAI,EAAE;AAACC,QAAAA;AAAD;AAAP,KAAD,IAAwBF,MAA9B;AACA,WAAO;AAACC,MAAAA,IAAI,EAAEF,SAAP;AAAkB,SAAGG;AAArB,KAAP;AACD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACdP,IAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACA,WAAO,EAAP;AACD;AACF;;AAAA;AAED,eAAeb,OAAf","sourcesContent":["import axios from \"axios\";\n\n//api creds - to move! \nconst appId = \"2b9c56f8\"\nconst apiKey = \"4b2d3c98a882d580d432b28e9fd6c748\"\n\n//fetch the raw api data \nasync function getData(foodName){\n  try {\n    const apiUrl = `https://api.edamam.com/api/food-database/v2/parser?ingr=${foodName}&app_id=${appId}&app_key=${apiKey}`;\n    const {data: rawData} = await axios.get(apiUrl);\n    console.log(rawData)\n    const {text: foodLabel, parsed} = rawData\n    const [{food: {nutrients}}] = parsed \n    return {food: foodLabel, ...nutrients};\n  } catch (error) {\n    console.log(error);    \n    return {}; \n  }\n};\n\nexport default getData; "]},"metadata":{},"sourceType":"module"}