{"ast":null,"code":"var _jsxFileName = \"/Users/dea/Code/Projects/react_foodfacts2/experimental/client/src/Components/BarChart.js\";\nimport React from \"react\";\nimport { ResponsiveBar } from '@nivo/bar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\n\nfunction MyResponsiveBar(props) {\n  const useStyles = makeStyles({\n    root: {\n      maxWidth: 600,\n      minWidth: 290,\n      height: 500,\n      //paddingBottom: 80\n      background: '#3f3b3b',\n      color: 'white',\n      opacity: 0.90\n    }\n  });\n  const lineGraphSettings = {\n    theme: {\n      fontSize: '14px',\n      textColor: props.color,\n      itemTextColor: props.color\n    }\n  }; //array of the current foods \n\n  function getFoods(data) {\n    return Object.keys(data).filter(el => el !== \"nutrient\" && el !== \"max\" && el !== \"calories\");\n  }\n\n  const currentFoods = getFoods(props.data[0]);\n  const styles = useStyles();\n  const fills = [\"#f35588\", \"#71a95a\", \"#14b1ab\", \"#e8505b\", \"#f9d56e\"];\n  const colors = {\n    [currentFoods[0]]: \"#DB5375\",\n    [currentFoods[1]]: \"#EC9192\",\n    [currentFoods[2]]: \"#f8dc88\",\n    [currentFoods[3]]: \"#B5BD89\",\n    [currentFoods[4]]: \"#729EA1\"\n  };\n\n  const getColor = bar => colors[bar.id];\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: styles.root,\n    elevation: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 18\n    }\n  }, \"Nutritional comparison\")), /*#__PURE__*/React.createElement(ResponsiveBar, {\n    data: props.data.slice(1),\n    keys: currentFoods,\n    indexBy: \"nutrient\",\n    margin: {\n      top: 10,\n      right: 130,\n      bottom: 140,\n      left: 60\n    },\n    padding: 0.3 //colors={{ scheme: 'nivo' }}\n    ,\n    colors: getColor,\n    colorBy: \"id\",\n    defs: [{\n      id: 'dots',\n      type: 'patternDots',\n      background: 'inherit',\n      color: '#38bcb2',\n      size: 4,\n      padding: 1,\n      stagger: true\n    }, {\n      id: 'lines',\n      type: 'patternLines',\n      background: 'inherit',\n      color: '#f8fab8',\n      rotation: -45,\n      lineWidth: 6,\n      spacing: 10\n    }],\n    fill: [{\n      match: {\n        id: ''\n      },\n      id: 'dots'\n    }, {\n      match: {\n        id: ''\n      },\n      id: 'lines'\n    }],\n    borderColor: {\n      from: 'color',\n      modifiers: [['brighter', 1.6]]\n    },\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {\n      tickSize: 7,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: 'Nutrients',\n      legendPosition: 'middle',\n      legendOffset: 45\n    },\n    axisLeft: {\n      tickSize: 7,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: 'food',\n      legendPosition: 'middle',\n      legendOffset: -40\n    },\n    labelSkipWidth: 12,\n    labelSkipHeight: 12,\n    labelTextColor: {\n      from: 'color',\n      modifiers: [['brighter', 1.6]]\n    },\n    legends: [{\n      dataFrom: 'keys',\n      anchor: 'bottom-right',\n      direction: 'column',\n      justify: false,\n      translateX: 120,\n      translateY: 0,\n      itemsSpacing: 2,\n      itemWidth: 100,\n      itemHeight: 20,\n      itemDirection: 'left-to-right',\n      itemOpacity: 0.85,\n      symbolSize: 20,\n      itemTextColor: props.color,\n      effects: [{\n        on: 'hover',\n        style: {\n          itemOpacity: 1\n        }\n      }]\n    }],\n    enableGridY: true,\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    theme: lineGraphSettings.theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default MyResponsiveBar;","map":{"version":3,"sources":["/Users/dea/Code/Projects/react_foodfacts2/experimental/client/src/Components/BarChart.js"],"names":["React","ResponsiveBar","makeStyles","Card","CardContent","Typography","MyResponsiveBar","props","useStyles","root","maxWidth","minWidth","height","background","color","opacity","lineGraphSettings","theme","fontSize","textColor","itemTextColor","getFoods","data","Object","keys","filter","el","currentFoods","styles","fills","colors","getColor","bar","id","slice","top","right","bottom","left","type","size","padding","stagger","rotation","lineWidth","spacing","match","from","modifiers","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { ResponsiveBar } from '@nivo/bar'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\n\n\nfunction MyResponsiveBar(props) {\n\n  const useStyles = makeStyles({\n    root: {\n      maxWidth: 600,\n      minWidth: 290,\n      height: 500,\n      //paddingBottom: 80\n      background: '#3f3b3b',\n      color: 'white',\n      opacity: 0.90,\n    }\n  })\n  \n  const lineGraphSettings = {\n    theme: {\n    fontSize: '14px',\n    textColor: props.color,\n    itemTextColor: props.color\n    },\n    };\n\n  //array of the current foods \n  function getFoods(data){\n    return Object.keys(data).filter(el => el!==\"nutrient\"&&el!==\"max\"&&el!==\"calories\")\n  }\n  const currentFoods = getFoods(props.data[0])\n\n  const styles = useStyles();\n\n  const fills = [\"#f35588\", \"#71a95a\", \"#14b1ab\", \"#e8505b\", \"#f9d56e\"];\n  const colors = { \n    [currentFoods[0]]: \"#DB5375\", \n    [currentFoods[1]]: \"#EC9192\", \n    [currentFoods[2]]: \"#f8dc88\", \n    [currentFoods[3]]: \"#B5BD89\",\n    [currentFoods[4]]: \"#729EA1\",\n  }\n  const getColor = bar => colors[bar.id]\n\n  return (\n    <Card className={styles.root} elevation={6}>\n    <CardContent><Typography variant=\"h5\">Nutritional comparison</Typography></CardContent>\n    <ResponsiveBar\n        data={props.data.slice(1)}\n        keys={currentFoods}\n        indexBy=\"nutrient\"\n        margin={{ top: 10, right: 130, bottom: 140, left: 60 }}\n        padding={0.3}\n        //colors={{ scheme: 'nivo' }}\n        colors={getColor}\n        colorBy=\"id\"\n        defs={[\n            {\n                id: 'dots',\n                type: 'patternDots',\n                background: 'inherit',\n                color: '#38bcb2',\n                size: 4,\n                padding: 1,\n                stagger: true\n            },\n            {\n                id: 'lines',\n                type: 'patternLines',\n                background: 'inherit',\n                color: '#f8fab8',\n                rotation: -45,\n                lineWidth: 6,\n                spacing: 10\n            }\n        ]}\n        fill={[\n            {\n                match: {\n                    id: ''\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: ''\n                },\n                id: 'lines'\n            }\n        ]}\n        borderColor={{ from: 'color', modifiers: [ [ 'brighter', 1.6 ] ] }}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n            tickSize: 7,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Nutrients',\n            legendPosition: 'middle',\n            legendOffset: 45\n        }}\n        axisLeft={{\n            tickSize: 7,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'food',\n            legendPosition: 'middle',\n            legendOffset: -40\n        }}\n        labelSkipWidth={12}\n        labelSkipHeight={12}\n        labelTextColor={{ from: 'color', modifiers: [ [ 'brighter', 1.6 ] ] }}\n        legends={[\n            {\n                dataFrom: 'keys',\n                anchor: 'bottom-right',\n                direction: 'column',\n                justify: false,\n                translateX: 120,\n                translateY: 0,\n                itemsSpacing: 2,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemDirection: 'left-to-right',\n                itemOpacity: 0.85,\n                symbolSize: 20,\n                itemTextColor: props.color,\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemOpacity: 1,\n                        }\n                    }\n                ]\n            }\n        ]}\n        enableGridY={true}\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n        theme={lineGraphSettings.theme}\n    />\n    </Card>\n  )\n}\n\nexport default MyResponsiveBar;"]},"metadata":{},"sourceType":"module"}