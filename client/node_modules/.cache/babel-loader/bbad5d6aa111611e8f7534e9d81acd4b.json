{"ast":null,"code":"var _jsxFileName = \"/Users/dea/Code/Projects/react_foodfacts2/experimental/client/src/Components/CaloriesChart.js\";\nimport React from \"react\";\nimport { ResponsiveBar } from '@nivo/bar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\nconst data = [{\n  \"country\": \"AD\",\n  \"hot dog\": 37,\n  \"burger\": 159,\n  \"sandwich\": 169,\n  \"kebab\": 15,\n  \"fries\": 148\n}];\n\nfunction MyResponsiveBar(props) {\n  const useStyles = makeStyles({\n    root: {\n      maxWidth: 1200,\n      minWidth: 200,\n      height: 150,\n      paddingBottom: 15,\n      marginBottom: 100,\n      background: '#3f3b3b',\n      paddingTop: 0,\n      color: 'white',\n      opacity: 0.90\n    }\n  });\n  const styles = useStyles(); //array of the current foods \n\n  function getFoods(data) {\n    return Object.keys(data).filter(el => el !== \"nutrient\" && el !== \"max\");\n  }\n\n  const currentFoods = getFoods(props.data[0]);\n  const fills = [\"#f35588\", \"#71a95a\", \"#14b1ab\", \"#e8505b\", \"#f9d56e\"];\n  const colors = {\n    [currentFoods[0]]: \"#DB5375\",\n    [currentFoods[1]]: \"#EC9192\",\n    [currentFoods[2]]: \"#f8dc88\",\n    [currentFoods[3]]: \"#B5BD89\",\n    [currentFoods[4]]: \"#729EA1\"\n  };\n\n  const getColor = bar => colors[bar.id];\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: styles.root,\n    elevation: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 18\n    }\n  }, \"Nutritional comparison\")), /*#__PURE__*/React.createElement(ResponsiveBar, {\n    data: props.data.slice(0, 1),\n    keys: currentFoods,\n    indexBy: \"nutrient\",\n    margin: {\n      top: 0,\n      right: 30,\n      bottom: 50,\n      left: 30\n    },\n    padding: 0.3,\n    layout: \"horizontal\",\n    colors: {\n      scheme: 'nivo'\n    },\n    defs: [{\n      id: 'dots',\n      type: 'patternDots',\n      background: 'inherit',\n      color: '#38bcb2',\n      size: 4,\n      padding: 1,\n      stagger: true\n    }, {\n      id: 'lines',\n      type: 'patternLines',\n      background: 'inherit',\n      color: '#eed312',\n      rotation: -45,\n      lineWidth: 6,\n      spacing: 10\n    }],\n    fill: [{\n      match: {\n        id: 'fries'\n      },\n      id: 'dots'\n    }, {\n      match: {\n        id: 'sandwich'\n      },\n      id: 'lines'\n    }],\n    borderColor: {\n      from: 'color',\n      modifiers: [['darker', 1.6]]\n    },\n    axisTop: null,\n    axisRight: null,\n    axisLeft: null,\n    axisBottom: null,\n    labelSkipWidth: 12,\n    labelSkipHeight: 12,\n    labelTextColor: {\n      from: 'color',\n      modifiers: [['darker', 1.6]]\n    },\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default MyResponsiveBar;","map":{"version":3,"sources":["/Users/dea/Code/Projects/react_foodfacts2/experimental/client/src/Components/CaloriesChart.js"],"names":["React","ResponsiveBar","makeStyles","Card","CardContent","Typography","data","MyResponsiveBar","props","useStyles","root","maxWidth","minWidth","height","paddingBottom","marginBottom","background","paddingTop","color","opacity","styles","getFoods","Object","keys","filter","el","currentFoods","fills","colors","getColor","bar","id","slice","top","right","bottom","left","scheme","type","size","padding","stagger","rotation","lineWidth","spacing","match","from","modifiers"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { ResponsiveBar } from '@nivo/bar'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\n\nconst data = [\n  {\n    \"country\": \"AD\",\n    \"hot dog\": 37,\n    \"burger\": 159,\n    \"sandwich\": 169,\n    \"kebab\": 15,\n    \"fries\": 148,\n  }]\n\n\nfunction MyResponsiveBar(props) {\n\n  const useStyles = makeStyles({\n    root: {\n      maxWidth: 1200,\n      minWidth: 200,\n      height: 150,\n      paddingBottom: 15,\n      marginBottom: 100,\n      background: '#3f3b3b',\n      paddingTop: 0,\n      color: 'white',\n      opacity: 0.90\n    }\n  })\n  const styles = useStyles();\n\n\n\n    //array of the current foods \n    function getFoods(data){\n      return Object.keys(data).filter(el => el!==\"nutrient\"&&el!==\"max\")\n    }\n    const currentFoods = getFoods(props.data[0])\n  \n    const fills = [\"#f35588\", \"#71a95a\", \"#14b1ab\", \"#e8505b\", \"#f9d56e\"];\n    const colors = { \n      [currentFoods[0]]: \"#DB5375\", \n      [currentFoods[1]]: \"#EC9192\", \n      [currentFoods[2]]: \"#f8dc88\", \n      [currentFoods[3]]: \"#B5BD89\",\n      [currentFoods[4]]: \"#729EA1\",\n    }\n    const getColor = bar => colors[bar.id]\n\n  return (\n    <Card className={styles.root} elevation={6}>\n    <CardContent><Typography variant=\"h5\">Nutritional comparison</Typography></CardContent>\n    <ResponsiveBar\n        data={props.data.slice(0,1)}\n        keys={currentFoods}\n        indexBy=\"nutrient\"\n        margin={{ top: 0, right: 30, bottom: 50, left: 30 }}\n        padding={0.3}\n        layout=\"horizontal\"\n        colors={{ scheme: 'nivo' }}\n        defs={[\n            {\n                id: 'dots',\n                type: 'patternDots',\n                background: 'inherit',\n                color: '#38bcb2',\n                size: 4,\n                padding: 1,\n                stagger: true\n            },\n            {\n                id: 'lines',\n                type: 'patternLines',\n                background: 'inherit',\n                color: '#eed312',\n                rotation: -45,\n                lineWidth: 6,\n                spacing: 10\n            }\n        ]}\n        fill={[\n            {\n                match: {\n                    id: 'fries'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'sandwich'\n                },\n                id: 'lines'\n            }\n        ]}\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n        axisTop={null}\n        axisRight={null}\n        axisLeft={null}\n        axisBottom={null}\n\n        labelSkipWidth={12}\n        labelSkipHeight={12}\n        labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n    />\n    </Card>\n  )\n}\n\nexport default MyResponsiveBar;"]},"metadata":{},"sourceType":"module"}