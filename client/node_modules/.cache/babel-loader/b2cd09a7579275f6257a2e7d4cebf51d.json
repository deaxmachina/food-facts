{"ast":null,"code":"import _toConsumableArray from\"/Users/dea/Code/Projects/react_foodfacts2/deployment/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/dea/Code/Projects/react_foodfacts2/deployment/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/*\nconst dataRaw = [\n  { id:0, name: 'Frozen yoghurt', calories: 159, fat: 5, carbs: 85, protein:34, fiber: 10 },\n  { id:1, name: 'Ice cream sandwich', calories: 237, fat: 33, carbs: 23, protein: 100, fiber: 20 },\n  { id:2, name: 'Eclair', calories: 262, fat: 4, carbs: 45, protein:6, fiber: 30 }\n*/function dataTransform(dataRaw){if(dataRaw.length!==0){var result;var _ret=function(){var dataAttr=[\"food\",\"PROCNT\",\"FIBTG\",\"FAT\",\"ENERC_KCAL\",\"CHOCDF\"];var food=dataRaw.map(function(obj){return obj.food;});var proteins=dataRaw.map(function(obj){return obj.PROCNT;});var fiber=dataRaw.map(function(obj){return obj.FIBTG;});var fat=dataRaw.map(function(obj){return obj.FAT;});//const calories = dataRaw.map(obj => obj.ENERC_KCAL)\nvar carbs=dataRaw.map(function(obj){return obj.CHOCDF;});//const dataFormatted = {food, proteins, fiber, fat, calories, carbs}\nvar dataFormatted={food:food,proteins:proteins,fiber:fiber,fat:fat,carbs:carbs};//const nutrients = [\"calories\", \"fat\", \"carbs\", \"proteins\", \"fiber\"]\nvar nutrients=[\"fat\",\"carbs\",\"proteins\",\"fiber\"];var dataTransformed=[];var _loop=function _loop(){var nurt=_nutrients[_i];result={};dataFormatted.food.forEach(function(id,i){return result[id]=dataFormatted[nurt][i];});dataTransformed.push(_objectSpread(_objectSpread({nutrient:nurt},result),{},{max:Math.max.apply(Math,_toConsumableArray(dataFormatted[nurt]))}));};for(var _i=0,_nutrients=nutrients;_i<_nutrients.length;_i++){_loop();};return{v:dataTransformed};}();if(typeof _ret===\"object\")return _ret.v;}else{return dataRaw;}};export default dataTransform;","map":{"version":3,"sources":["/Users/dea/Code/Projects/react_foodfacts2/deployment/client/src/Functionality/data.js"],"names":["dataTransform","dataRaw","length","result","dataAttr","food","map","obj","proteins","PROCNT","fiber","FIBTG","fat","FAT","carbs","CHOCDF","dataFormatted","nutrients","dataTransformed","nurt","forEach","id","i","push","nutrient","max","Math"],"mappings":"2WAAA;;;;;EAOA,QAASA,CAAAA,aAAT,CAAuBC,OAAvB,CAA+B,CAC7B,GAAIA,OAAO,CAACC,MAAR,GAAkB,CAAtB,CAAyB,IAejBC,CAAAA,MAfiB,qBACvB,GAAMC,CAAAA,QAAQ,CAAG,CAAC,MAAD,CAAS,QAAT,CAAmB,OAAnB,CAA2B,KAA3B,CAAkC,YAAlC,CAAgD,QAAhD,CAAjB,CACA,GAAMC,CAAAA,IAAI,CAAGJ,OAAO,CAACK,GAAR,CAAY,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACF,IAAR,EAAf,CAAb,CACA,GAAMG,CAAAA,QAAQ,CAAGP,OAAO,CAACK,GAAR,CAAY,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACE,MAAR,EAAf,CAAjB,CACA,GAAMC,CAAAA,KAAK,CAAGT,OAAO,CAACK,GAAR,CAAY,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACI,KAAR,EAAf,CAAd,CACA,GAAMC,CAAAA,GAAG,CAAGX,OAAO,CAACK,GAAR,CAAY,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACM,GAAR,EAAf,CAAZ,CACA;AACA,GAAMC,CAAAA,KAAK,CAAGb,OAAO,CAACK,GAAR,CAAY,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACQ,MAAR,EAAf,CAAd,CACA;AACA,GAAMC,CAAAA,aAAa,CAAG,CAACX,IAAI,CAAJA,IAAD,CAAOG,QAAQ,CAARA,QAAP,CAAiBE,KAAK,CAALA,KAAjB,CAAwBE,GAAG,CAAHA,GAAxB,CAA6BE,KAAK,CAALA,KAA7B,CAAtB,CAEA;AACA,GAAMG,CAAAA,SAAS,CAAG,CAAC,KAAD,CAAQ,OAAR,CAAiB,UAAjB,CAA6B,OAA7B,CAAlB,CACA,GAAIC,CAAAA,eAAe,CAAG,EAAtB,CAbuB,2BAclB,GAAMC,CAAAA,IAAI,eAAV,CACChB,MAAM,CAAG,EAfQ,CAgBrBa,aAAa,CAACX,IAAd,CAAmBe,OAAnB,CAA2B,SAACC,EAAD,CAAKC,CAAL,QAAWnB,CAAAA,MAAM,CAACkB,EAAD,CAAN,CAAaL,aAAa,CAACG,IAAD,CAAb,CAAoBG,CAApB,CAAxB,EAA3B,EACAJ,eAAe,CAACK,IAAhB,8BAAsBC,QAAQ,CAAEL,IAAhC,EAAyChB,MAAzC,MAAiDsB,GAAG,CAAEC,IAAI,CAACD,GAAL,OAAAC,IAAI,oBAAQV,aAAa,CAACG,IAAD,CAArB,EAA1D,IAjBqB,EAcvB,wBAAmBF,SAAnB,2BAA8B,SAI7B,EACD,SAAOC,eAAP,EAnBuB,4CAoBxB,CApBD,IAoBO,CACL,MAAOjB,CAAAA,OAAP,CACD,CACF,EAED,cAAeD,CAAAA,aAAf","sourcesContent":["/*\nconst dataRaw = [\n  { id:0, name: 'Frozen yoghurt', calories: 159, fat: 5, carbs: 85, protein:34, fiber: 10 },\n  { id:1, name: 'Ice cream sandwich', calories: 237, fat: 33, carbs: 23, protein: 100, fiber: 20 },\n  { id:2, name: 'Eclair', calories: 262, fat: 4, carbs: 45, protein:6, fiber: 30 }\n*/\n\nfunction dataTransform(dataRaw){\n  if (dataRaw.length !==0) {\n    const dataAttr = [\"food\", \"PROCNT\", \"FIBTG\",\"FAT\", \"ENERC_KCAL\", \"CHOCDF\"]\n    const food = dataRaw.map(obj => obj.food)\n    const proteins = dataRaw.map(obj => obj.PROCNT)\n    const fiber = dataRaw.map(obj => obj.FIBTG)\n    const fat = dataRaw.map(obj => obj.FAT)\n    //const calories = dataRaw.map(obj => obj.ENERC_KCAL)\n    const carbs = dataRaw.map(obj => obj.CHOCDF)\n    //const dataFormatted = {food, proteins, fiber, fat, calories, carbs}\n    const dataFormatted = {food, proteins, fiber, fat, carbs}\n    \n    //const nutrients = [\"calories\", \"fat\", \"carbs\", \"proteins\", \"fiber\"]\n    const nutrients = [\"fat\", \"carbs\", \"proteins\", \"fiber\"]\n    let dataTransformed = []\n    for (const nurt of nutrients) {\n      var result = {};\n      dataFormatted.food.forEach((id, i) => result[id] = dataFormatted[nurt][i]);\n      dataTransformed.push({nutrient: nurt, ...result, max: Math.max(...dataFormatted[nurt])})\n    };\n    return dataTransformed\n  } else {\n    return dataRaw\n  }\n};\n\nexport default dataTransform; \n"]},"metadata":{},"sourceType":"module"}