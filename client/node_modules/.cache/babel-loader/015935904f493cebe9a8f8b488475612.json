{"ast":null,"code":"var _jsxFileName = \"/Users/dea/Code/Projects/react_foodfacts2/complete/src/Components/Chart.js\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, CardActions, CardActionArea, Button } from \"@material-ui/core\";\nimport React, { useState, useEffect } from 'react';\nimport { Radar, RadarChart, PolarGrid, Legend, PolarAngleAxis, PolarRadiusAxis, ResponsiveContainer, Text, XAxis, Label } from 'recharts'; // example of data format \n\n/*\nconst realData = [\n  {nutrient: \"calories\", apple: 52, banana: 50, kiwi: 61, max: 89},\n  {nutrient: \"fat\", apple: 0.17, banana: 0.33, kiwi: 50.52, max: 0.52},\n  {nutrient: \"carbs\", apple: 13.81, banana: 22.84, kiwi: 74.66, max: 22.84},\n  {nutrient: \"proteins\", apple: 0.26, banana: 81.09, kiwi: 1.14, max: 1.14},\n  {nutrient: \"fiber\", apple: 2.4, banana: 82.6, kiwi: 3, max: 3}\n]\n*/\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 600,\n    minWidth: 270,\n    height: 400\n  }\n});\n\nfunction MyRadarChart(props) {\n  const styles = useStyles();\n  const fills = [\"#8884d8\", \"#82ca9d\", \"#edb2c2\"]; //array of the current foods \n\n  function getFoods(data) {\n    return Object.keys(data).filter(el => el !== \"nutrient\" && el !== \"max\");\n  }\n\n  const currentFoods = getFoods(props.data[0]); //opacity \n\n  function handleOpacities(opacity) {\n    let opacities = [];\n    currentFoods.forEach(food => opacities.push([food, opacity]));\n    opacities = Object.fromEntries(opacities);\n    return opacities;\n  }\n\n  const startOpacities = handleOpacities(0.6);\n  const baseOpacities = handleOpacities(0.3);\n  const [opacities, setOpacities] = useState(startOpacities);\n\n  function handleLegendClick(e) {\n    const {\n      dataKey\n    } = e;\n    setOpacities({ ...baseOpacities,\n      [dataKey]: 0.9\n    });\n  }\n\n  useEffect(() => {\n    console.log(\"The data changed\");\n    setOpacities(baseOpacities);\n    console.log(props.data);\n  }, [props.data]);\n  return /*#__PURE__*/React.createElement(Card, {\n    className: styles.root,\n    elevation: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Content\"), /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"99%\",\n    height: \"90%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RadarChart, {\n    outerRadius: \"70%\",\n    data: props.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PolarGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(PolarAngleAxis, {\n    dataKey: \"nutrient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(PolarRadiusAxis, {\n    angle: 30,\n    domain: [0, 20],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }), currentFoods.map((food, id) => /*#__PURE__*/React.createElement(Radar, {\n    key: id,\n    name: food,\n    dataKey: food,\n    fill: fills[id],\n    fillOpacity: opacities[food],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  })), \"r\", /*#__PURE__*/React.createElement(Legend, {\n    onClick: handleLegendClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }))));\n} //opacities[food]\n\n\nexport default MyRadarChart;","map":{"version":3,"sources":["/Users/dea/Code/Projects/react_foodfacts2/complete/src/Components/Chart.js"],"names":["makeStyles","Card","CardContent","CardActions","CardActionArea","Button","React","useState","useEffect","Radar","RadarChart","PolarGrid","Legend","PolarAngleAxis","PolarRadiusAxis","ResponsiveContainer","Text","XAxis","Label","useStyles","root","maxWidth","minWidth","height","MyRadarChart","props","styles","fills","getFoods","data","Object","keys","filter","el","currentFoods","handleOpacities","opacity","opacities","forEach","food","push","fromEntries","startOpacities","baseOpacities","setOpacities","handleLegendClick","e","dataKey","console","log","map","id"],"mappings":"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","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, CardActions, CardActionArea, Button } from \"@material-ui/core\";\nimport React, { useState, useEffect } from 'react';\nimport {\n  Radar, RadarChart, PolarGrid, Legend,\n  PolarAngleAxis, PolarRadiusAxis, ResponsiveContainer, Text, XAxis, Label\n} from 'recharts';\n\n\n// example of data format \n/*\nconst realData = [\n  {nutrient: \"calories\", apple: 52, banana: 50, kiwi: 61, max: 89},\n  {nutrient: \"fat\", apple: 0.17, banana: 0.33, kiwi: 50.52, max: 0.52},\n  {nutrient: \"carbs\", apple: 13.81, banana: 22.84, kiwi: 74.66, max: 22.84},\n  {nutrient: \"proteins\", apple: 0.26, banana: 81.09, kiwi: 1.14, max: 1.14},\n  {nutrient: \"fiber\", apple: 2.4, banana: 82.6, kiwi: 3, max: 3}\n]\n*/\n\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 600,\n    minWidth: 270,\n    height: 400\n  }\n})\n\n\nfunction MyRadarChart(props) {\n    const styles = useStyles();\n    const fills = [\"#8884d8\", \"#82ca9d\", \"#edb2c2\"];\n\n    //array of the current foods \n    function getFoods(data){\n      return Object.keys(data).filter(el => el!==\"nutrient\"&&el!==\"max\")\n    }\n    const currentFoods = getFoods(props.data[0])\n\n    //opacity \n\n    function handleOpacities(opacity){\n      let opacities = [];\n      currentFoods.forEach(food => opacities.push([food, opacity]))\n      opacities = Object.fromEntries(opacities)\n      return opacities\n    }\n    const startOpacities = handleOpacities(0.6);\n    const baseOpacities = handleOpacities(0.3);\n\n    const [opacities, setOpacities] = useState(startOpacities)\n\n\n    function handleLegendClick(e){\n      const { dataKey } = e\n      setOpacities({...baseOpacities, [dataKey]: 0.9});\n    }\n\n    useEffect(()=>{\n      console.log(\"The data changed\")\n      setOpacities(baseOpacities)\n      console.log(props.data)\n    }, [props.data])\n\n\n    return (    \n      <Card className={styles.root} elevation={6}>\n        <CardContent>Content</CardContent>\n        <ResponsiveContainer width=\"99%\" height=\"90%\">\n            <RadarChart outerRadius={\"70%\"}  data={props.data} >\n              <PolarGrid />\n              <PolarAngleAxis dataKey=\"nutrient\" />\n              <PolarRadiusAxis angle={30} domain={[0, 20]} />\n\n              {currentFoods.map((food, id) => (\n                <Radar key={id} name={food} dataKey={food} fill={fills[id]} fillOpacity={opacities[food]} />))}\nr\n            {/* \n              <Radar name=\"Apple\" dataKey=\"apple\" fill=\"#8884d8\" fillOpacity={0.6} />\n              <Radar name=\"Banana\" dataKey=\"banana\" fill=\"#82ca9d\" fillOpacity={0.6} />\n              <Radar name=\"Kiwi\" dataKey=\"kiwi\" fill=\"#edb2c2\" fillOpacity={0.6} />\n            */} \n              <Legend onClick={handleLegendClick}/>\n            </RadarChart> \n        </ResponsiveContainer>        \n      </Card>\n      \n    );\n  }\n\n//opacities[food]\n\nexport default MyRadarChart;\n\n"]},"metadata":{},"sourceType":"module"}