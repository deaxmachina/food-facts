{"ast":null,"code":"import React, { memo, useMemo, useState, useCallback } from 'react';\nimport { scaleLinear } from 'd3-scale';\nimport { useTheme, useMotionConfig, useAnimatedPath, positionFromAngle, radiansToDegrees, useValueFormatter, getLabelGenerator, DotsItem, closedCurvePropType, blendModePropType, motionPropTypes, withContainer, getAccessorFor, useDimensions, useCurveInterpolation, SvgWrapper, ResponsiveWrapper } from '@nivo/core';\nimport { useInheritedColor, getInheritedColorGenerator, inheritedColorPropType, ordinalColorsPropType, useOrdinalColorScale } from '@nivo/colors';\nimport { LegendPropShape, BoxLegendSvg } from '@nivo/legends';\nimport { useSpring, animated, useSprings, to } from 'react-spring';\nimport { lineRadial, curveLinearClosed, arc } from 'd3-shape';\nimport { useTooltip, Chip, TableTooltip } from '@nivo/tooltip';\nimport PropTypes from 'prop-types';\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nvar RadarShapes = memo(function (_ref) {\n  var data = _ref.data,\n      key = _ref.item,\n      colorByKey = _ref.colorByKey,\n      radiusScale = _ref.radiusScale,\n      angleStep = _ref.angleStep,\n      curveInterpolator = _ref.curveInterpolator,\n      borderWidth = _ref.borderWidth,\n      borderColor = _ref.borderColor,\n      fillOpacity = _ref.fillOpacity,\n      blendMode = _ref.blendMode;\n  var theme = useTheme();\n  var getBorderColor = useInheritedColor(borderColor, theme);\n  var lineGenerator = useMemo(function () {\n    return lineRadial().radius(function (d) {\n      return radiusScale(d);\n    }).angle(function (d, i) {\n      return i * angleStep;\n    }).curve(curveInterpolator);\n  }, [radiusScale, angleStep, curveInterpolator]);\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var animatedPath = useAnimatedPath(lineGenerator(data.map(function (d) {\n    return d[key];\n  })));\n  var animatedProps = useSpring({\n    fill: colorByKey[key],\n    stroke: getBorderColor({\n      key: key,\n      color: colorByKey[key]\n    }),\n    config: springConfig,\n    immediate: !animate\n  });\n  return React.createElement(animated.path, {\n    key: key,\n    d: animatedPath,\n    fill: animatedProps.fill,\n    fillOpacity: fillOpacity,\n    stroke: animatedProps.stroke,\n    strokeWidth: borderWidth,\n    style: {\n      mixBlendMode: blendMode\n    }\n  });\n});\nRadarShapes.displayName = 'RadarShapes';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar textAnchorFromAngle = function textAnchorFromAngle(_angle) {\n  var angle = radiansToDegrees(_angle) + 90;\n  if (angle <= 10 || angle >= 350 || angle >= 170 && angle <= 190) return 'middle';\n  if (angle > 180) return 'end';\n  return 'start';\n};\n\nvar renderLabel = function renderLabel(label, theme, labelComponent) {\n  if (labelComponent === undefined) {\n    return React.createElement(\"text\", {\n      style: theme.axis.ticks.text,\n      dominantBaseline: \"central\",\n      textAnchor: label.anchor\n    }, label.id);\n  }\n\n  return React.createElement(labelComponent, label);\n};\n\nvar RadarGridLabels = memo(function (_ref) {\n  var radius = _ref.radius,\n      angles = _ref.angles,\n      indices = _ref.indices,\n      labelComponent = _ref.label,\n      labelOffset = _ref.labelOffset;\n  var theme = useTheme();\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var labels = indices.map(function (index, i) {\n    var position = positionFromAngle(angles[i], radius + labelOffset);\n    var textAnchor = textAnchorFromAngle(angles[i]);\n    return _objectSpread2({\n      id: index,\n      angle: radiansToDegrees(angles[i]),\n      anchor: textAnchor\n    }, position);\n  });\n  var springs = useSprings(labels.length, labels.map(function (label) {\n    return {\n      transform: \"translate(\".concat(label.x, \", \").concat(label.y, \")\"),\n      config: springConfig,\n      immediate: !animate\n    };\n  }));\n  return springs.map(function (animatedProps, index) {\n    var label = labels[index];\n    return React.createElement(animated.g, {\n      key: label.id,\n      transform: animatedProps.transform\n    }, renderLabel(label, theme, labelComponent));\n  });\n});\nRadarGridLabels.displayName = 'RadarGridLabels';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar RadarGridLevelCircular = memo(function (_ref) {\n  var radius = _ref.radius;\n  var theme = useTheme();\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var animatedProps = useSpring({\n    radius: radius,\n    config: springConfig,\n    immediate: !animate\n  });\n  return React.createElement(animated.circle, Object.assign({\n    fill: \"none\",\n    r: to(animatedProps.radius, function (value) {\n      return Math.max(value, 0);\n    })\n  }, theme.grid.line));\n});\nRadarGridLevelCircular.displayName = 'RadarGridLevelCircular';\nvar RadarGridLevelLinear = memo(function (_ref2) {\n  var radius = _ref2.radius,\n      angleStep = _ref2.angleStep,\n      dataLength = _ref2.dataLength;\n  var theme = useTheme();\n  var radarLineGenerator = useMemo(function () {\n    return lineRadial().angle(function (i) {\n      return i * angleStep;\n    }).radius(radius).curve(curveLinearClosed);\n  }, [angleStep, radius]);\n  var points = Array.from({\n    length: dataLength\n  }, function (_, i) {\n    return i;\n  });\n  var animatedPath = useAnimatedPath(radarLineGenerator(points));\n  return React.createElement(animated.path, Object.assign({\n    fill: \"none\",\n    d: animatedPath\n  }, theme.grid.line));\n});\nRadarGridLevelLinear.displayName = 'RadarGridLevelLinear';\nvar RadarGridLevels = memo(function (_ref3) {\n  var shape = _ref3.shape,\n      props = _objectWithoutProperties(_ref3, [\"shape\"]);\n\n  return shape === 'circular' ? React.createElement(RadarGridLevelCircular, {\n    radius: props.radius\n  }) : React.createElement(RadarGridLevelLinear, props);\n});\nRadarGridLevels.displayName = 'RadarGridLevels';\nvar RadarGrid = memo(function (_ref) {\n  var indices = _ref.indices,\n      levels = _ref.levels,\n      shape = _ref.shape,\n      radius = _ref.radius,\n      angleStep = _ref.angleStep,\n      label = _ref.label,\n      labelOffset = _ref.labelOffset;\n  var theme = useTheme();\n\n  var _useMemo = useMemo(function () {\n    return {\n      radii: Array.from({\n        length: levels\n      }).map(function (_, i) {\n        return radius / levels * (i + 1);\n      }).reverse(),\n      angles: Array.from({\n        length: indices.length\n      }, function (_, i) {\n        return i * angleStep - Math.PI / 2;\n      })\n    };\n  }, [indices, levels, radius, angleStep]),\n      radii = _useMemo.radii,\n      angles = _useMemo.angles;\n\n  return React.createElement(\"g\", null, angles.map(function (angle, i) {\n    var position = positionFromAngle(angle, radius);\n    return React.createElement(\"line\", Object.assign({\n      key: \"axis.\".concat(i),\n      x1: 0,\n      y1: 0,\n      x2: position.x,\n      y2: position.y\n    }, theme.grid));\n  }), radii.map(function (radius, i) {\n    return React.createElement(RadarGridLevels, {\n      key: \"level.\".concat(i),\n      shape: shape,\n      radius: radius,\n      angleStep: angleStep,\n      dataLength: indices.length\n    });\n  }), React.createElement(RadarGridLabels, {\n    radius: radius,\n    angles: angles,\n    indices: indices,\n    labelOffset: labelOffset,\n    label: label\n  }));\n});\nRadarGrid.displayName = 'RadarGrid';\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nvar RadarTooltipItem = memo(function (_ref) {\n  var datum = _ref.datum,\n      keys = _ref.keys,\n      index = _ref.index,\n      colorByKey = _ref.colorByKey,\n      radius = _ref.radius,\n      startAngle = _ref.startAngle,\n      endAngle = _ref.endAngle,\n      arcGenerator = _ref.arcGenerator,\n      tooltipFormat = _ref.tooltipFormat;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isHover = _useState2[0],\n      setIsHover = _useState2[1];\n\n  var theme = useTheme();\n\n  var _useTooltip = useTooltip(),\n      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,\n      hideTooltip = _useTooltip.hideTooltip;\n\n  var tooltipFormatter = useValueFormatter(tooltipFormat);\n  var tooltip = useMemo(function () {\n    var rows = keys.map(function (key) {\n      return [React.createElement(Chip, {\n        key: key,\n        color: colorByKey[key]\n      }), key, tooltipFormatter(datum[key], key)];\n    });\n    rows.sort(function (a, b) {\n      return a[2] - b[2];\n    });\n    rows.reverse();\n    return React.createElement(TableTooltip, {\n      title: React.createElement(\"strong\", null, index),\n      rows: rows,\n      theme: theme\n    });\n  }, [datum, keys, index, colorByKey, theme, tooltipFormatter]);\n  var showItemTooltip = useCallback(function (event) {\n    setIsHover(true);\n    showTooltipFromEvent(tooltip, event);\n  }, [showTooltipFromEvent, tooltip]);\n  var hideItemTooltip = useCallback(function () {\n    setIsHover(false);\n    hideTooltip();\n  }, [hideTooltip, setIsHover]);\n\n  var _useMemo = useMemo(function () {\n    var position = positionFromAngle(startAngle + (endAngle - startAngle) * 0.5 - Math.PI / 2, radius);\n    return {\n      path: arcGenerator({\n        startAngle: startAngle,\n        endAngle: endAngle\n      }),\n      tipX: position.x,\n      tipY: position.y\n    };\n  }, [startAngle, endAngle, radius, arcGenerator]),\n      path = _useMemo.path,\n      tipX = _useMemo.tipX,\n      tipY = _useMemo.tipY;\n\n  return React.createElement(React.Fragment, null, isHover && React.createElement(\"line\", {\n    x1: 0,\n    y1: 0,\n    x2: tipX,\n    y2: tipY,\n    style: theme.crosshair.line\n  }), React.createElement(\"path\", {\n    d: path,\n    fill: \"#F00\",\n    fillOpacity: 0,\n    onMouseEnter: showItemTooltip,\n    onMouseMove: showItemTooltip,\n    onMouseLeave: hideItemTooltip\n  }));\n});\nRadarTooltipItem.displayName = 'RadarTooltipItem';\nvar RadarTooltip = memo(function (_ref) {\n  var data = _ref.data,\n      keys = _ref.keys,\n      getIndex = _ref.getIndex,\n      colorByKey = _ref.colorByKey,\n      radius = _ref.radius,\n      angleStep = _ref.angleStep,\n      tooltipFormat = _ref.tooltipFormat;\n  var arc$1 = arc().outerRadius(radius).innerRadius(0);\n  var halfAngleStep = angleStep * 0.5;\n  var rootStartAngle = -halfAngleStep;\n  return React.createElement(\"g\", null, data.map(function (d) {\n    var index = getIndex(d);\n    var startAngle = rootStartAngle;\n    var endAngle = startAngle + angleStep;\n    rootStartAngle += angleStep;\n    return React.createElement(RadarTooltipItem, {\n      key: index,\n      datum: d,\n      keys: keys,\n      index: index,\n      colorByKey: colorByKey,\n      startAngle: startAngle,\n      endAngle: endAngle,\n      radius: radius,\n      arcGenerator: arc$1,\n      tooltipFormat: tooltipFormat\n    });\n  }));\n});\nRadarTooltip.displayName = 'RadarTooltip';\n\nvar RadarDots = function RadarDots(_ref) {\n  var data = _ref.data,\n      keys = _ref.keys,\n      getIndex = _ref.getIndex,\n      colorByKey = _ref.colorByKey,\n      radiusScale = _ref.radiusScale,\n      angleStep = _ref.angleStep,\n      symbol = _ref.symbol,\n      size = _ref.size,\n      color = _ref.color,\n      borderWidth = _ref.borderWidth,\n      borderColor = _ref.borderColor,\n      enableLabel = _ref.enableLabel,\n      label = _ref.label,\n      labelFormat = _ref.labelFormat,\n      labelYOffset = _ref.labelYOffset;\n  var theme = useTheme();\n  var fillColor = getInheritedColorGenerator(color, theme);\n  var strokeColor = getInheritedColorGenerator(borderColor, theme);\n  var getLabel = getLabelGenerator(label, labelFormat);\n  var points = useMemo(function () {\n    return data.reduce(function (acc, datum, i) {\n      var index = getIndex(datum);\n      keys.forEach(function (key) {\n        var pointData = {\n          index: index,\n          key: key,\n          value: datum[key],\n          color: colorByKey[key]\n        };\n        acc.push({\n          key: \"\".concat(key, \".\").concat(index),\n          label: enableLabel ? getLabel(pointData) : null,\n          style: _objectSpread2({\n            fill: fillColor(pointData),\n            stroke: strokeColor(pointData)\n          }, positionFromAngle(angleStep * i - Math.PI / 2, radiusScale(datum[key]))),\n          data: pointData\n        });\n      });\n      return acc;\n    }, []);\n  }, [data, getIndex, colorByKey, enableLabel, getLabel, fillColor, strokeColor, angleStep, radiusScale]);\n  return points.map(function (point) {\n    return React.createElement(DotsItem, {\n      key: point.key,\n      x: point.style.x,\n      y: point.style.y,\n      symbol: symbol,\n      size: size,\n      color: point.style.fill,\n      borderWidth: borderWidth,\n      borderColor: point.style.stroke,\n      label: point.label,\n      labelYOffset: labelYOffset,\n      theme: theme,\n      datum: point.data\n    });\n  });\n};\n\nRadarDots.defaultProps = {\n  size: 6,\n  color: {\n    from: 'color'\n  },\n  borderWidth: 0,\n  borderColor: {\n    from: 'color'\n  },\n  enableLabel: false,\n  label: 'value'\n};\n\nvar RadarPropTypes = _objectSpread2({\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  keys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired,\n  indexBy: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]).isRequired,\n  maxValue: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]).isRequired,\n  curve: closedCurvePropType.isRequired,\n  borderWidth: PropTypes.number.isRequired,\n  borderColor: inheritedColorPropType.isRequired,\n  gridLevels: PropTypes.number,\n  gridShape: PropTypes.oneOf(['circular', 'linear']),\n  gridLabel: PropTypes.func,\n  gridLabelOffset: PropTypes.number,\n  enableDots: PropTypes.bool.isRequired,\n  dotSymbol: PropTypes.func,\n  dotSize: PropTypes.number,\n  dotColor: inheritedColorPropType,\n  dotBorderWidth: PropTypes.number,\n  dotBorderColor: inheritedColorPropType,\n  enableDotLabel: PropTypes.bool,\n  dotLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  dotLabelFormat: PropTypes.string,\n  dotLabelYOffset: PropTypes.number,\n  colors: ordinalColorsPropType.isRequired,\n  fillOpacity: PropTypes.number.isRequired,\n  blendMode: blendModePropType.isRequired,\n  isInteractive: PropTypes.bool.isRequired,\n  tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n  role: PropTypes.string.isRequired\n}, motionPropTypes);\n\nvar RadarDefaultProps = {\n  maxValue: 'auto',\n  curve: 'linearClosed',\n  borderWidth: 2,\n  borderColor: {\n    from: 'color'\n  },\n  gridLevels: 5,\n  gridShape: 'circular',\n  gridLabelOffset: 16,\n  enableDots: true,\n  colors: {\n    scheme: 'nivo'\n  },\n  fillOpacity: 0.25,\n  blendMode: 'normal',\n  isInteractive: true,\n  legends: [],\n  role: 'img',\n  animate: true,\n  motionDamping: 13,\n  motionStiffness: 90\n};\nvar Radar = memo(function (_ref) {\n  var data = _ref.data,\n      keys = _ref.keys,\n      indexBy = _ref.indexBy,\n      maxValue = _ref.maxValue,\n      curve = _ref.curve,\n      partialMargin = _ref.margin,\n      width = _ref.width,\n      height = _ref.height,\n      borderWidth = _ref.borderWidth,\n      borderColor = _ref.borderColor,\n      gridLevels = _ref.gridLevels,\n      gridShape = _ref.gridShape,\n      gridLabel = _ref.gridLabel,\n      gridLabelOffset = _ref.gridLabelOffset,\n      enableDots = _ref.enableDots,\n      dotSymbol = _ref.dotSymbol,\n      dotSize = _ref.dotSize,\n      dotColor = _ref.dotColor,\n      dotBorderWidth = _ref.dotBorderWidth,\n      dotBorderColor = _ref.dotBorderColor,\n      enableDotLabel = _ref.enableDotLabel,\n      dotLabel = _ref.dotLabel,\n      dotLabelFormat = _ref.dotLabelFormat,\n      dotLabelYOffset = _ref.dotLabelYOffset,\n      colors = _ref.colors,\n      fillOpacity = _ref.fillOpacity,\n      blendMode = _ref.blendMode,\n      isInteractive = _ref.isInteractive,\n      tooltipFormat = _ref.tooltipFormat,\n      legends = _ref.legends,\n      role = _ref.role;\n  var getIndex = useMemo(function () {\n    return getAccessorFor(indexBy);\n  }, [indexBy]);\n  var indices = useMemo(function () {\n    return data.map(getIndex);\n  }, [data, getIndex]);\n\n  var _useDimensions = useDimensions(width, height, partialMargin),\n      margin = _useDimensions.margin,\n      innerWidth = _useDimensions.innerWidth,\n      innerHeight = _useDimensions.innerHeight,\n      outerWidth = _useDimensions.outerWidth,\n      outerHeight = _useDimensions.outerHeight;\n\n  var theme = useTheme();\n  var getColor = useOrdinalColorScale(colors, 'key');\n  var colorByKey = useMemo(function () {\n    return keys.reduce(function (mapping, key, index) {\n      mapping[key] = getColor({\n        key: key,\n        index: index\n      });\n      return mapping;\n    }, {});\n  }, [keys, getColor]);\n\n  var _useMemo = useMemo(function () {\n    var computedMaxValue = maxValue !== 'auto' ? maxValue : Math.max.apply(Math, _toConsumableArray(data.reduce(function (acc, d) {\n      return [].concat(_toConsumableArray(acc), _toConsumableArray(keys.map(function (key) {\n        return d[key];\n      })));\n    }, [])));\n    var radius = Math.min(innerWidth, innerHeight) / 2;\n    var radiusScale = scaleLinear().range([0, radius]).domain([0, computedMaxValue]);\n    return {\n      radius: radius,\n      radiusScale: radiusScale,\n      centerX: innerWidth / 2,\n      centerY: innerHeight / 2,\n      angleStep: Math.PI * 2 / data.length\n    };\n  }, [keys, indexBy, data, maxValue, innerWidth, innerHeight]),\n      radius = _useMemo.radius,\n      radiusScale = _useMemo.radiusScale,\n      centerX = _useMemo.centerX,\n      centerY = _useMemo.centerY,\n      angleStep = _useMemo.angleStep;\n\n  var legendData = keys.map(function (key) {\n    return {\n      id: key,\n      label: key,\n      color: colorByKey[key]\n    };\n  });\n  var curveInterpolator = useCurveInterpolation(curve);\n  return React.createElement(SvgWrapper, {\n    width: outerWidth,\n    height: outerHeight,\n    margin: margin,\n    theme: theme,\n    role: role\n  }, React.createElement(\"g\", {\n    transform: \"translate(\".concat(centerX, \", \").concat(centerY, \")\")\n  }, React.createElement(RadarGrid, {\n    levels: gridLevels,\n    shape: gridShape,\n    radius: radius,\n    angleStep: angleStep,\n    indices: indices,\n    label: gridLabel,\n    labelOffset: gridLabelOffset\n  }), keys.map(function (key) {\n    return React.createElement(RadarShapes, Object.assign({\n      key: key\n    }, {\n      data: data,\n      item: key,\n      colorByKey: colorByKey,\n      radiusScale: radiusScale,\n      angleStep: angleStep,\n      curveInterpolator: curveInterpolator,\n      borderWidth: borderWidth,\n      borderColor: borderColor,\n      fillOpacity: fillOpacity,\n      blendMode: blendMode\n    }));\n  }), isInteractive && React.createElement(RadarTooltip, {\n    data: data,\n    keys: keys,\n    getIndex: getIndex,\n    colorByKey: colorByKey,\n    radius: radius,\n    angleStep: angleStep,\n    tooltipFormat: tooltipFormat\n  }), enableDots && React.createElement(RadarDots, {\n    data: data,\n    keys: keys,\n    getIndex: getIndex,\n    radiusScale: radiusScale,\n    angleStep: angleStep,\n    symbol: dotSymbol,\n    size: dotSize,\n    colorByKey: colorByKey,\n    color: dotColor,\n    borderWidth: dotBorderWidth,\n    borderColor: dotBorderColor,\n    enableLabel: enableDotLabel,\n    label: dotLabel,\n    labelFormat: dotLabelFormat,\n    labelYOffset: dotLabelYOffset\n  })), legends.map(function (legend, i) {\n    return React.createElement(BoxLegendSvg, Object.assign({\n      key: i\n    }, legend, {\n      containerWidth: width,\n      containerHeight: height,\n      data: legendData,\n      theme: theme\n    }));\n  }));\n});\nRadar.displayName = 'Radar';\nRadar.defaultProps = RadarDefaultProps;\nvar Radar$1 = withContainer(Radar);\n\nvar ResponsiveRadar = function ResponsiveRadar(props) {\n  return React.createElement(ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React.createElement(Radar$1, Object.assign({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nexport { Radar$1 as Radar, RadarDefaultProps, RadarDots, RadarPropTypes, ResponsiveRadar };","map":{"version":3,"sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../src/RadarShapes.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/RadarGridLabels.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../src/RadarGridLevels.js","../src/RadarGrid.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/RadarTooltipItem.js","../src/RadarTooltip.js","../src/RadarDots.js","../src/props.js","../src/Radar.js","../src/ResponsiveRadar.js"],"names":["arrayLikeToArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","RadarShapes","memo","data","item","key","colorByKey","radiusScale","angleStep","curveInterpolator","borderWidth","borderColor","fillOpacity","blendMode","theme","useTheme","getBorderColor","useInheritedColor","lineGenerator","useMemo","i","animate","springConfig","useMotionConfig","animatedPath","useAnimatedPath","d","animatedProps","useSpring","fill","stroke","color","config","immediate","mixBlendMode","defineProperty","textAnchorFromAngle","angle","radiansToDegrees","renderLabel","labelComponent","label","anchor","React","RadarGridLabels","radius","angles","indices","labelOffset","labels","position","positionFromAngle","textAnchor","id","springs","useSprings","transform","objectWithoutPropertiesLoose","RadarGridLevelCircular","to","Math","RadarGridLevelLinear","dataLength","radarLineGenerator","points","length","RadarGridLevels","shape","props","RadarGrid","levels","radii","y","arrayWithHoles","iterableToArrayLimit","nonIterableRest","RadarTooltipItem","datum","keys","index","startAngle","endAngle","arcGenerator","tooltipFormat","isHover","setIsHover","useState","showTooltipFromEvent","hideTooltip","useTooltip","tooltipFormatter","useValueFormatter","tooltip","rows","a","b","showItemTooltip","useCallback","hideItemTooltip","path","tipX","tipY","line","RadarTooltip","getIndex","arc","d3Arc","halfAngleStep","rootStartAngle","RadarDots","symbol","size","enableLabel","labelFormat","labelYOffset","fillColor","getInheritedColorGenerator","strokeColor","getLabel","getLabelGenerator","pointData","value","acc","style","point","from","RadarPropTypes","PropTypes","indexBy","maxValue","curve","closedCurvePropType","inheritedColorPropType","gridLevels","gridShape","gridLabel","gridLabelOffset","enableDots","dotSymbol","dotSize","dotColor","dotBorderWidth","dotBorderColor","enableDotLabel","dotLabel","dotLabelFormat","dotLabelYOffset","colors","ordinalColorsPropType","blendModePropType","isInteractive","legends","role","isRequired","RadarDefaultProps","scheme","motionDamping","motionStiffness","Radar","margin","partialMargin","width","height","getAccessorFor","innerWidth","innerHeight","outerWidth","outerHeight","useDimensions","getColor","useOrdinalColorScale","mapping","centerX","centerY","computedMaxValue","scaleLinear","legendData","useCurveInterpolation","withContainer","ResponsiveRadar"],"mappings":"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","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { lineRadial } from 'd3-shape'\nimport { useMotionConfig, useTheme, useAnimatedPath, blendModePropType } from '@nivo/core'\nimport { useInheritedColor, inheritedColorPropType } from '@nivo/colors'\n\nconst RadarShapes = memo(\n    ({\n        data,\n        item: key,\n        colorByKey,\n        radiusScale,\n        angleStep,\n        curveInterpolator,\n        borderWidth,\n        borderColor,\n        fillOpacity,\n        blendMode,\n    }) => {\n        const theme = useTheme()\n        const getBorderColor = useInheritedColor(borderColor, theme)\n\n        const lineGenerator = useMemo(() => {\n            return lineRadial()\n                .radius(d => radiusScale(d))\n                .angle((d, i) => i * angleStep)\n                .curve(curveInterpolator)\n        }, [radiusScale, angleStep, curveInterpolator])\n\n        const { animate, config: springConfig } = useMotionConfig()\n        const animatedPath = useAnimatedPath(lineGenerator(data.map(d => d[key])))\n        const animatedProps = useSpring({\n            fill: colorByKey[key],\n            stroke: getBorderColor({ key, color: colorByKey[key] }),\n            config: springConfig,\n            immediate: !animate,\n        })\n\n        return (\n            <animated.path\n                key={key}\n                d={animatedPath}\n                fill={animatedProps.fill}\n                fillOpacity={fillOpacity}\n                stroke={animatedProps.stroke}\n                strokeWidth={borderWidth}\n                style={{ mixBlendMode: blendMode }}\n            />\n        )\n    }\n)\n\nRadarShapes.displayName = 'RadarShapes'\nRadarShapes.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    item: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    colorByKey: PropTypes.object.isRequired,\n\n    radiusScale: PropTypes.func.isRequired,\n    angleStep: PropTypes.number.isRequired,\n\n    curveInterpolator: PropTypes.func.isRequired,\n\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n\n    fillOpacity: PropTypes.number.isRequired,\n    blendMode: blendModePropType.isRequired,\n}\n\nexport default RadarShapes\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSprings, animated } from 'react-spring'\nimport { useTheme, useMotionConfig, positionFromAngle, radiansToDegrees } from '@nivo/core'\n\nconst textAnchorFromAngle = _angle => {\n    const angle = radiansToDegrees(_angle) + 90\n    if (angle <= 10 || angle >= 350 || (angle >= 170 && angle <= 190)) return 'middle'\n    if (angle > 180) return 'end'\n    return 'start'\n}\n\nconst renderLabel = (label, theme, labelComponent) => {\n    if (labelComponent === undefined) {\n        return (\n            <text\n                style={theme.axis.ticks.text}\n                dominantBaseline=\"central\"\n                textAnchor={label.anchor}\n            >\n                {label.id}\n            </text>\n        )\n    }\n\n    return React.createElement(labelComponent, label)\n}\n\nconst RadarGridLabels = memo(({ radius, angles, indices, label: labelComponent, labelOffset }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const labels = indices.map((index, i) => {\n        const position = positionFromAngle(angles[i], radius + labelOffset)\n        const textAnchor = textAnchorFromAngle(angles[i])\n\n        return {\n            id: index,\n            angle: radiansToDegrees(angles[i]),\n            anchor: textAnchor,\n            ...position,\n        }\n    })\n\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            transform: `translate(${label.x}, ${label.y})`,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return springs.map((animatedProps, index) => {\n        const label = labels[index]\n\n        return (\n            <animated.g key={label.id} transform={animatedProps.transform}>\n                {renderLabel(label, theme, labelComponent)}\n            </animated.g>\n        )\n    })\n})\n\nRadarGridLabels.displayName = 'RadarGridLabels'\nRadarGridLabels.propTypes = {\n    radius: PropTypes.number.isRequired,\n    angles: PropTypes.arrayOf(PropTypes.number).isRequired,\n    indices: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\n        .isRequired,\n    label: PropTypes.func,\n    labelOffset: PropTypes.number.isRequired,\n}\n\nexport default RadarGridLabels\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { lineRadial, curveLinearClosed } from 'd3-shape'\nimport { animated, useSpring, to } from 'react-spring'\nimport { useTheme, useAnimatedPath, useMotionConfig } from '@nivo/core'\n\nconst RadarGridLevelCircular = memo(({ radius }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        radius,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.circle\n            fill=\"none\"\n            r={to(animatedProps.radius, value => Math.max(value, 0))}\n            {...theme.grid.line}\n        />\n    )\n})\n\nRadarGridLevelCircular.displayName = 'RadarGridLevelCircular'\nRadarGridLevelCircular.propTypes = {\n    radius: PropTypes.number.isRequired,\n}\n\nconst RadarGridLevelLinear = memo(({ radius, angleStep, dataLength }) => {\n    const theme = useTheme()\n\n    const radarLineGenerator = useMemo(\n        () =>\n            lineRadial()\n                .angle(i => i * angleStep)\n                .radius(radius)\n                .curve(curveLinearClosed),\n        [angleStep, radius]\n    )\n\n    const points = Array.from({ length: dataLength }, (_, i) => i)\n    const animatedPath = useAnimatedPath(radarLineGenerator(points))\n\n    return <animated.path fill=\"none\" d={animatedPath} {...theme.grid.line} />\n})\n\nRadarGridLevelLinear.displayName = 'RadarGridLevelLinear'\nRadarGridLevelLinear.propTypes = {\n    radius: PropTypes.number.isRequired,\n    angleStep: PropTypes.number.isRequired,\n    dataLength: PropTypes.number.isRequired,\n}\n\nconst RadarGridLevels = memo(({ shape, ...props }) => {\n    return shape === 'circular' ? (\n        <RadarGridLevelCircular radius={props.radius} />\n    ) : (\n        <RadarGridLevelLinear {...props} />\n    )\n})\n\nRadarGridLevels.displayName = 'RadarGridLevels'\nRadarGridLevels.propTypes = {\n    shape: PropTypes.oneOf(['circular', 'linear']).isRequired,\n    radius: PropTypes.number.isRequired,\n    angleStep: PropTypes.number.isRequired,\n    dataLength: PropTypes.number.isRequired,\n}\n\nexport default RadarGridLevels\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { positionFromAngle, useTheme } from '@nivo/core'\nimport RadialGridLabels from './RadarGridLabels'\nimport RadarGridLevels from './RadarGridLevels'\n\nconst RadarGrid = memo(({ indices, levels, shape, radius, angleStep, label, labelOffset }) => {\n    const theme = useTheme()\n    const { radii, angles } = useMemo(() => {\n        return {\n            radii: Array.from({ length: levels })\n                .map((_, i) => (radius / levels) * (i + 1))\n                .reverse(),\n            angles: Array.from({ length: indices.length }, (_, i) => i * angleStep - Math.PI / 2),\n        }\n    }, [indices, levels, radius, angleStep])\n\n    return (\n        <g>\n            {angles.map((angle, i) => {\n                const position = positionFromAngle(angle, radius)\n                return (\n                    <line\n                        key={`axis.${i}`}\n                        x1={0}\n                        y1={0}\n                        x2={position.x}\n                        y2={position.y}\n                        {...theme.grid}\n                    />\n                )\n            })}\n            {radii.map((radius, i) => (\n                <RadarGridLevels\n                    key={`level.${i}`}\n                    shape={shape}\n                    radius={radius}\n                    angleStep={angleStep}\n                    dataLength={indices.length}\n                />\n            ))}\n            <RadialGridLabels\n                radius={radius}\n                angles={angles}\n                indices={indices}\n                labelOffset={labelOffset}\n                label={label}\n            />\n        </g>\n    )\n})\n\nRadarGrid.displayName = 'RadarGrid'\nRadarGrid.propTypes = {\n    indices: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\n        .isRequired,\n    shape: PropTypes.oneOf(['circular', 'linear']).isRequired,\n    radius: PropTypes.number.isRequired,\n    levels: PropTypes.number.isRequired,\n    angleStep: PropTypes.number.isRequired,\n    label: PropTypes.func,\n    labelOffset: PropTypes.number.isRequired,\n}\n\nexport default RadarGrid\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo, useState, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { positionFromAngle, useTheme, useValueFormatter } from '@nivo/core'\nimport { TableTooltip, Chip, useTooltip } from '@nivo/tooltip'\n\nconst RadarTooltipItem = memo(\n    ({\n        datum,\n        keys,\n        index,\n        colorByKey,\n        radius,\n        startAngle,\n        endAngle,\n        arcGenerator,\n        tooltipFormat,\n    }) => {\n        const [isHover, setIsHover] = useState(false)\n        const theme = useTheme()\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        const tooltipFormatter = useValueFormatter(tooltipFormat)\n        const tooltip = useMemo(() => {\n            const rows = keys.map(key => [\n                <Chip key={key} color={colorByKey[key]} />,\n                key,\n                tooltipFormatter(datum[key], key),\n            ])\n            rows.sort((a, b) => a[2] - b[2])\n            rows.reverse()\n\n            return <TableTooltip title={<strong>{index}</strong>} rows={rows} theme={theme} />\n        }, [datum, keys, index, colorByKey, theme, tooltipFormatter])\n        const showItemTooltip = useCallback(\n            event => {\n                setIsHover(true)\n                showTooltipFromEvent(tooltip, event)\n            },\n            [showTooltipFromEvent, tooltip]\n        )\n        const hideItemTooltip = useCallback(() => {\n            setIsHover(false)\n            hideTooltip()\n        }, [hideTooltip, setIsHover])\n\n        const { path, tipX, tipY } = useMemo(() => {\n            const position = positionFromAngle(\n                startAngle + (endAngle - startAngle) * 0.5 - Math.PI / 2,\n                radius\n            )\n\n            return {\n                path: arcGenerator({ startAngle, endAngle }),\n                tipX: position.x,\n                tipY: position.y,\n            }\n        }, [startAngle, endAngle, radius, arcGenerator])\n\n        return (\n            <>\n                {isHover && <line x1={0} y1={0} x2={tipX} y2={tipY} style={theme.crosshair.line} />}\n                <path\n                    d={path}\n                    fill=\"#F00\"\n                    fillOpacity={0}\n                    onMouseEnter={showItemTooltip}\n                    onMouseMove={showItemTooltip}\n                    onMouseLeave={hideItemTooltip}\n                />\n            </>\n        )\n    }\n)\n\nRadarTooltipItem.displayName = 'RadarTooltipItem'\nRadarTooltipItem.propTypes = {\n    datum: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n    keys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired,\n    index: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    colorByKey: PropTypes.object.isRequired,\n\n    startAngle: PropTypes.number.isRequired,\n    endAngle: PropTypes.number.isRequired,\n    radius: PropTypes.number.isRequired,\n\n    arcGenerator: PropTypes.func.isRequired,\n\n    tooltipFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n}\n\nexport default RadarTooltipItem\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { arc as d3Arc } from 'd3-shape'\nimport RadarTooltipItem from './RadarTooltipItem'\n\nconst RadarTooltip = memo(\n    ({ data, keys, getIndex, colorByKey, radius, angleStep, tooltipFormat }) => {\n        const arc = d3Arc().outerRadius(radius).innerRadius(0)\n\n        const halfAngleStep = angleStep * 0.5\n        let rootStartAngle = -halfAngleStep\n\n        return (\n            <g>\n                {data.map(d => {\n                    const index = getIndex(d)\n                    const startAngle = rootStartAngle\n                    const endAngle = startAngle + angleStep\n\n                    rootStartAngle += angleStep\n\n                    return (\n                        <RadarTooltipItem\n                            key={index}\n                            datum={d}\n                            keys={keys}\n                            index={index}\n                            colorByKey={colorByKey}\n                            startAngle={startAngle}\n                            endAngle={endAngle}\n                            radius={radius}\n                            arcGenerator={arc}\n                            tooltipFormat={tooltipFormat}\n                        />\n                    )\n                })}\n            </g>\n        )\n    }\n)\n\nRadarTooltip.displayName = 'RadarTooltip'\nRadarTooltip.propTypes = {\n    data: PropTypes.array.isRequired,\n    keys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired,\n    getIndex: PropTypes.func.isRequired,\n    colorByKey: PropTypes.object.isRequired,\n\n    radius: PropTypes.number.isRequired,\n    angleStep: PropTypes.number.isRequired,\n\n    tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n}\n\nexport default RadarTooltip\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme, positionFromAngle, getLabelGenerator, DotsItem } from '@nivo/core'\nimport { getInheritedColorGenerator, inheritedColorPropType } from '@nivo/colors'\n\nconst RadarDots = ({\n    data,\n    keys,\n    getIndex,\n    colorByKey,\n    radiusScale,\n    angleStep,\n    symbol,\n    size,\n    color,\n    borderWidth,\n    borderColor,\n    enableLabel,\n    label,\n    labelFormat,\n    labelYOffset,\n}) => {\n    const theme = useTheme()\n    const fillColor = getInheritedColorGenerator(color, theme)\n    const strokeColor = getInheritedColorGenerator(borderColor, theme)\n    const getLabel = getLabelGenerator(label, labelFormat)\n\n    const points = useMemo(\n        () =>\n            data.reduce((acc, datum, i) => {\n                const index = getIndex(datum)\n                keys.forEach(key => {\n                    const pointData = {\n                        index,\n                        key,\n                        value: datum[key],\n                        color: colorByKey[key],\n                    }\n                    acc.push({\n                        key: `${key}.${index}`,\n                        label: enableLabel ? getLabel(pointData) : null,\n                        style: {\n                            fill: fillColor(pointData),\n                            stroke: strokeColor(pointData),\n                            ...positionFromAngle(\n                                angleStep * i - Math.PI / 2,\n                                radiusScale(datum[key])\n                            ),\n                        },\n                        data: pointData,\n                    })\n                })\n\n                return acc\n            }, []),\n        [\n            data,\n            getIndex,\n            colorByKey,\n            enableLabel,\n            getLabel,\n            fillColor,\n            strokeColor,\n            angleStep,\n            radiusScale,\n        ]\n    )\n\n    return points.map(point => (\n        <DotsItem\n            key={point.key}\n            x={point.style.x}\n            y={point.style.y}\n            symbol={symbol}\n            size={size}\n            color={point.style.fill}\n            borderWidth={borderWidth}\n            borderColor={point.style.stroke}\n            label={point.label}\n            labelYOffset={labelYOffset}\n            theme={theme}\n            datum={point.data}\n        />\n    ))\n}\n\nRadarDots.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    keys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired,\n    getIndex: PropTypes.func.isRequired,\n    colorByKey: PropTypes.object.isRequired,\n    radiusScale: PropTypes.func.isRequired,\n    angleStep: PropTypes.number.isRequired,\n    symbol: PropTypes.func,\n    size: PropTypes.number.isRequired,\n    color: inheritedColorPropType.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n    enableLabel: PropTypes.bool.isRequired,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelFormat: PropTypes.string,\n    labelYOffset: PropTypes.number,\n}\nRadarDots.defaultProps = {\n    size: 6,\n    color: { from: 'color' },\n    borderWidth: 0,\n    borderColor: { from: 'color' },\n    enableLabel: false,\n    label: 'value',\n}\n\nexport default RadarDots\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@nivo/colors'\nimport { LegendPropShape } from '@nivo/legends'\nimport { closedCurvePropType, motionPropTypes, blendModePropType } from '@nivo/core'\n\nexport const RadarPropTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    keys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired,\n    indexBy: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.func]).isRequired,\n    maxValue: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]).isRequired,\n\n    curve: closedCurvePropType.isRequired,\n\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: inheritedColorPropType.isRequired,\n\n    gridLevels: PropTypes.number,\n    gridShape: PropTypes.oneOf(['circular', 'linear']),\n    gridLabel: PropTypes.func,\n    gridLabelOffset: PropTypes.number,\n\n    enableDots: PropTypes.bool.isRequired,\n    dotSymbol: PropTypes.func,\n    dotSize: PropTypes.number,\n    dotColor: inheritedColorPropType,\n    dotBorderWidth: PropTypes.number,\n    dotBorderColor: inheritedColorPropType,\n    enableDotLabel: PropTypes.bool,\n    dotLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    dotLabelFormat: PropTypes.string,\n    dotLabelYOffset: PropTypes.number,\n\n    colors: ordinalColorsPropType.isRequired,\n    fillOpacity: PropTypes.number.isRequired,\n    blendMode: blendModePropType.isRequired,\n\n    isInteractive: PropTypes.bool.isRequired,\n    tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n    role: PropTypes.string.isRequired,\n\n    ...motionPropTypes,\n}\n\nexport const RadarDefaultProps = {\n    maxValue: 'auto',\n\n    curve: 'linearClosed',\n\n    borderWidth: 2,\n    borderColor: { from: 'color' },\n\n    gridLevels: 5,\n    gridShape: 'circular',\n    gridLabelOffset: 16,\n\n    enableDots: true,\n\n    colors: { scheme: 'nivo' },\n    fillOpacity: 0.25,\n    blendMode: 'normal',\n\n    isInteractive: true,\n\n    legends: [],\n    role: 'img',\n\n    animate: true,\n    motionDamping: 13,\n    motionStiffness: 90,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useMemo } from 'react'\nimport { scaleLinear } from 'd3-scale'\nimport {\n    withContainer,\n    useTheme,\n    useCurveInterpolation,\n    useDimensions,\n    getAccessorFor,\n    SvgWrapper,\n} from '@nivo/core'\nimport { useOrdinalColorScale } from '@nivo/colors'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport RadarShapes from './RadarShapes'\nimport RadarGrid from './RadarGrid'\nimport RadarTooltip from './RadarTooltip'\nimport RadarDots from './RadarDots'\nimport { RadarDefaultProps, RadarPropTypes } from './props'\n\nconst Radar = memo(\n    ({\n        data,\n        keys,\n        indexBy,\n        maxValue,\n        curve,\n        margin: partialMargin,\n        width,\n        height,\n        borderWidth,\n        borderColor,\n        gridLevels,\n        gridShape,\n        gridLabel,\n        gridLabelOffset,\n        enableDots,\n        dotSymbol,\n        dotSize,\n        dotColor,\n        dotBorderWidth,\n        dotBorderColor,\n        enableDotLabel,\n        dotLabel,\n        dotLabelFormat,\n        dotLabelYOffset,\n        colors,\n        fillOpacity,\n        blendMode,\n        isInteractive,\n        tooltipFormat,\n        legends,\n        role,\n    }) => {\n        const getIndex = useMemo(() => getAccessorFor(indexBy), [indexBy])\n        const indices = useMemo(() => data.map(getIndex), [data, getIndex])\n\n        const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n            width,\n            height,\n            partialMargin\n        )\n        const theme = useTheme()\n\n        const getColor = useOrdinalColorScale(colors, 'key')\n        const colorByKey = useMemo(\n            () =>\n                keys.reduce((mapping, key, index) => {\n                    mapping[key] = getColor({ key, index })\n                    return mapping\n                }, {}),\n            [keys, getColor]\n        )\n\n        const { radius, radiusScale, centerX, centerY, angleStep } = useMemo(() => {\n            const computedMaxValue =\n                maxValue !== 'auto'\n                    ? maxValue\n                    : Math.max(...data.reduce((acc, d) => [...acc, ...keys.map(key => d[key])], []))\n\n            const radius = Math.min(innerWidth, innerHeight) / 2\n            const radiusScale = scaleLinear().range([0, radius]).domain([0, computedMaxValue])\n\n            return {\n                radius,\n                radiusScale,\n                centerX: innerWidth / 2,\n                centerY: innerHeight / 2,\n                angleStep: (Math.PI * 2) / data.length,\n            }\n        }, [keys, indexBy, data, maxValue, innerWidth, innerHeight])\n\n        const legendData = keys.map(key => ({\n            id: key,\n            label: key,\n            color: colorByKey[key],\n        }))\n\n        const curveInterpolator = useCurveInterpolation(curve)\n\n        return (\n            <SvgWrapper\n                width={outerWidth}\n                height={outerHeight}\n                margin={margin}\n                theme={theme}\n                role={role}\n            >\n                <g transform={`translate(${centerX}, ${centerY})`}>\n                    <RadarGrid\n                        levels={gridLevels}\n                        shape={gridShape}\n                        radius={radius}\n                        angleStep={angleStep}\n                        indices={indices}\n                        label={gridLabel}\n                        labelOffset={gridLabelOffset}\n                    />\n                    {keys.map(key => (\n                        <RadarShapes\n                            key={key}\n                            {...{\n                                data,\n                                item: key,\n                                colorByKey,\n                                radiusScale,\n                                angleStep,\n                                curveInterpolator,\n                                borderWidth,\n                                borderColor,\n                                fillOpacity,\n                                blendMode,\n                            }}\n                        />\n                    ))}\n                    {isInteractive && (\n                        <RadarTooltip\n                            data={data}\n                            keys={keys}\n                            getIndex={getIndex}\n                            colorByKey={colorByKey}\n                            radius={radius}\n                            angleStep={angleStep}\n                            tooltipFormat={tooltipFormat}\n                        />\n                    )}\n                    {enableDots && (\n                        <RadarDots\n                            data={data}\n                            keys={keys}\n                            getIndex={getIndex}\n                            radiusScale={radiusScale}\n                            angleStep={angleStep}\n                            symbol={dotSymbol}\n                            size={dotSize}\n                            colorByKey={colorByKey}\n                            color={dotColor}\n                            borderWidth={dotBorderWidth}\n                            borderColor={dotBorderColor}\n                            enableLabel={enableDotLabel}\n                            label={dotLabel}\n                            labelFormat={dotLabelFormat}\n                            labelYOffset={dotLabelYOffset}\n                        />\n                    )}\n                </g>\n                {legends.map((legend, i) => (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={width}\n                        containerHeight={height}\n                        data={legendData}\n                        theme={theme}\n                    />\n                ))}\n            </SvgWrapper>\n        )\n    }\n)\n\nRadar.displayName = 'Radar'\nRadar.propTypes = RadarPropTypes\nRadar.defaultProps = RadarDefaultProps\n\nexport default withContainer(Radar)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Radar from './Radar'\n\nconst ResponsiveRadar = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Radar width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveRadar\n"]},"metadata":{},"sourceType":"module"}