{"ast":null,"code":"var _jsxFileName = \"/Users/dea/Code/Projects/react_foodfacts2/experimental/client/src/Components/BarChart.js\";\nimport React from \"react\";\nimport { ResponsiveBar } from '@nivo/bar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card } from \"@material-ui/core\";\nconst data = [{\n  \"country\": \"AD\",\n  \"hot dog\": 170,\n  \"hot dogColor\": \"hsl(161, 70%, 50%)\",\n  \"burger\": 116,\n  \"burgerColor\": \"hsl(296, 70%, 50%)\",\n  \"sandwich\": 17,\n  \"sandwichColor\": \"hsl(272, 70%, 50%)\",\n  \"kebab\": 186,\n  \"kebabColor\": \"hsl(268, 70%, 50%)\",\n  \"fries\": 61,\n  \"friesColor\": \"hsl(286, 70%, 50%)\",\n  \"donut\": 197,\n  \"donutColor\": \"hsl(132, 70%, 50%)\"\n}, {\n  \"country\": \"AE\",\n  \"hot dog\": 10,\n  \"hot dogColor\": \"hsl(67, 70%, 50%)\",\n  \"burger\": 153,\n  \"burgerColor\": \"hsl(160, 70%, 50%)\",\n  \"sandwich\": 101,\n  \"sandwichColor\": \"hsl(81, 70%, 50%)\",\n  \"kebab\": 113,\n  \"kebabColor\": \"hsl(205, 70%, 50%)\",\n  \"fries\": 10,\n  \"friesColor\": \"hsl(82, 70%, 50%)\",\n  \"donut\": 85,\n  \"donutColor\": \"hsl(27, 70%, 50%)\"\n}, {\n  \"country\": \"AF\",\n  \"hot dog\": 118,\n  \"hot dogColor\": \"hsl(184, 70%, 50%)\",\n  \"burger\": 90,\n  \"burgerColor\": \"hsl(22, 70%, 50%)\",\n  \"sandwich\": 62,\n  \"sandwichColor\": \"hsl(125, 70%, 50%)\",\n  \"kebab\": 97,\n  \"kebabColor\": \"hsl(179, 70%, 50%)\",\n  \"fries\": 13,\n  \"friesColor\": \"hsl(17, 70%, 50%)\",\n  \"donut\": 85,\n  \"donutColor\": \"hsl(21, 70%, 50%)\"\n}, {\n  \"country\": \"AG\",\n  \"hot dog\": 8,\n  \"hot dogColor\": \"hsl(47, 70%, 50%)\",\n  \"burger\": 192,\n  \"burgerColor\": \"hsl(206, 70%, 50%)\",\n  \"sandwich\": 164,\n  \"sandwichColor\": \"hsl(56, 70%, 50%)\",\n  \"kebab\": 166,\n  \"kebabColor\": \"hsl(3, 70%, 50%)\",\n  \"fries\": 168,\n  \"friesColor\": \"hsl(126, 70%, 50%)\",\n  \"donut\": 76,\n  \"donutColor\": \"hsl(221, 70%, 50%)\"\n}, {\n  \"country\": \"AI\",\n  \"hot dog\": 80,\n  \"hot dogColor\": \"hsl(153, 70%, 50%)\",\n  \"burger\": 195,\n  \"burgerColor\": \"hsl(122, 70%, 50%)\",\n  \"sandwich\": 93,\n  \"sandwichColor\": \"hsl(348, 70%, 50%)\",\n  \"kebab\": 193,\n  \"kebabColor\": \"hsl(356, 70%, 50%)\",\n  \"fries\": 124,\n  \"friesColor\": \"hsl(158, 70%, 50%)\",\n  \"donut\": 16,\n  \"donutColor\": \"hsl(124, 70%, 50%)\"\n}, {\n  \"country\": \"AL\",\n  \"hot dog\": 2,\n  \"hot dogColor\": \"hsl(11, 70%, 50%)\",\n  \"burger\": 95,\n  \"burgerColor\": \"hsl(130, 70%, 50%)\",\n  \"sandwich\": 181,\n  \"sandwichColor\": \"hsl(148, 70%, 50%)\",\n  \"kebab\": 91,\n  \"kebabColor\": \"hsl(153, 70%, 50%)\",\n  \"fries\": 131,\n  \"friesColor\": \"hsl(7, 70%, 50%)\",\n  \"donut\": 75,\n  \"donutColor\": \"hsl(2, 70%, 50%)\"\n}, {\n  \"country\": \"AM\",\n  \"hot dog\": 0,\n  \"hot dogColor\": \"hsl(284, 70%, 50%)\",\n  \"burger\": 96,\n  \"burgerColor\": \"hsl(307, 70%, 50%)\",\n  \"sandwich\": 95,\n  \"sandwichColor\": \"hsl(159, 70%, 50%)\",\n  \"kebab\": 37,\n  \"kebabColor\": \"hsl(299, 70%, 50%)\",\n  \"fries\": 37,\n  \"friesColor\": \"hsl(330, 70%, 50%)\",\n  \"donut\": 23,\n  \"donutColor\": \"hsl(288, 70%, 50%)\"\n}];\nconst myData = [{\n  \"country\": \"AF\",\n  \"hot dog\": 118,\n  \"hot dogColor\": \"hsl(184, 70%, 50%)\",\n  \"burger\": 90,\n  \"burgerColor\": \"hsl(22, 70%, 50%)\",\n  \"sandwich\": 62,\n  \"sandwichColor\": \"hsl(125, 70%, 50%)\",\n  \"kebab\": 97,\n  \"kebabColor\": \"hsl(179, 70%, 50%)\",\n  \"fries\": 13,\n  \"friesColor\": \"hsl(17, 70%, 50%)\",\n  \"donut\": 85,\n  \"donutColor\": \"hsl(21, 70%, 50%)\"\n}, {\n  \"country\": \"AG\",\n  \"hot dog\": 8,\n  \"hot dogColor\": \"hsl(47, 70%, 50%)\",\n  \"burger\": 192,\n  \"burgerColor\": \"hsl(206, 70%, 50%)\",\n  \"sandwich\": 164,\n  \"sandwichColor\": \"hsl(56, 70%, 50%)\",\n  \"kebab\": 166,\n  \"kebabColor\": \"hsl(3, 70%, 50%)\",\n  \"fries\": 168,\n  \"friesColor\": \"hsl(126, 70%, 50%)\",\n  \"donut\": 76,\n  \"donutColor\": \"hsl(221, 70%, 50%)\"\n}, {\n  \"country\": \"AI\",\n  \"hot dog\": 80,\n  \"hot dogColor\": \"hsl(153, 70%, 50%)\",\n  \"burger\": 195,\n  \"burgerColor\": \"hsl(122, 70%, 50%)\",\n  \"sandwich\": 93,\n  \"sandwichColor\": \"hsl(348, 70%, 50%)\",\n  \"kebab\": 193,\n  \"kebabColor\": \"hsl(356, 70%, 50%)\",\n  \"fries\": 124,\n  \"friesColor\": \"hsl(158, 70%, 50%)\",\n  \"donut\": 16,\n  \"donutColor\": \"hsl(124, 70%, 50%)\"\n}, {\n  \"country\": \"AL\",\n  \"hot dog\": 2,\n  \"hot dogColor\": \"hsl(11, 70%, 50%)\",\n  \"burger\": 95,\n  \"burgerColor\": \"hsl(130, 70%, 50%)\",\n  \"sandwich\": 181,\n  \"sandwichColor\": \"hsl(148, 70%, 50%)\",\n  \"kebab\": 91,\n  \"kebabColor\": \"hsl(153, 70%, 50%)\",\n  \"fries\": 131,\n  \"friesColor\": \"hsl(7, 70%, 50%)\",\n  \"donut\": 75,\n  \"donutColor\": \"hsl(2, 70%, 50%)\"\n}, {\n  \"country\": \"AM\",\n  \"hot dog\": 0,\n  \"hot dogColor\": \"hsl(284, 70%, 50%)\",\n  \"burger\": 96,\n  \"burgerColor\": \"hsl(307, 70%, 50%)\",\n  \"sandwich\": 95,\n  \"sandwichColor\": \"hsl(159, 70%, 50%)\",\n  \"kebab\": 37,\n  \"kebabColor\": \"hsl(299, 70%, 50%)\",\n  \"fries\": 37,\n  \"friesColor\": \"hsl(330, 70%, 50%)\",\n  \"donut\": 23,\n  \"donutColor\": \"hsl(288, 70%, 50%)\"\n}];\nconst realData = [{\n  nutrient: \"calories\",\n  apple: 52,\n  banana: 50,\n  kiwi: 61,\n  nuts: 80,\n  avocado: 30,\n  max: 89\n}, {\n  nutrient: \"fat\",\n  apple: 0.17,\n  banana: 0.33,\n  kiwi: 50.52,\n  nuts: 80,\n  avocado: 30,\n  max: 0.52\n}, {\n  nutrient: \"carbs\",\n  apple: 13.81,\n  banana: 22.84,\n  kiwi: 74.66,\n  nuts: 80,\n  avocado: 30,\n  max: 22.84\n}, {\n  nutrient: \"proteins\",\n  apple: 0.26,\n  banana: 81.09,\n  kiwi: 1.14,\n  nuts: 80,\n  avocado: 30,\n  max: 1.14\n}, {\n  nutrient: \"fiber\",\n  apple: 2.4,\n  banana: 82.6,\n  kiwi: 3,\n  avocado: 30,\n  max: 3\n}];\n/*\nfunction getFoods(dt){\n  return Object.keys(dt).filter(el => el!==\"nutrient\"&&el!==\"max\")\n}\n\nconst currentFoods = getFoods(realData[0])\nconsole.log(currentFoods)\n*/\n\nfunction MyResponsiveBar(props) {\n  const useStyles = makeStyles({\n    root: {\n      maxWidth: 600,\n      minWidth: 290,\n      height: 500,\n      marginBottom: 20,\n      paddingBottom: 30\n    }\n  });\n  const lineGraphSettings = {\n    theme: {\n      fontSize: '14px',\n      textColor: props.color\n    }\n  }; //array of the current foods \n\n  function getFoods(data) {\n    return Object.keys(data).filter(el => el !== \"nutrient\" && el !== \"max\");\n  }\n\n  const currentFoods = getFoods(props.data[0]);\n  const styles = useStyles();\n  return /*#__PURE__*/React.createElement(Card, {\n    className: styles.root,\n    elevation: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveBar, {\n    data: props.data,\n    keys: currentFoods,\n    indexBy: \"nutrient\",\n    margin: {\n      top: 50,\n      right: 130,\n      bottom: 50,\n      left: 60\n    },\n    padding: 0.3,\n    colors: {\n      scheme: 'nivo'\n    },\n    defs: [{\n      id: 'dots',\n      type: 'patternDots',\n      background: 'inherit',\n      color: '#38bcb2',\n      size: 4,\n      padding: 1,\n      stagger: true\n    }, {\n      id: 'lines',\n      type: 'patternLines',\n      background: 'inherit',\n      color: '#eed312',\n      rotation: -45,\n      lineWidth: 6,\n      spacing: 10\n    }],\n    fill: [{\n      match: {\n        id: currentFoods[4]\n      },\n      id: 'dots'\n    }, {\n      match: {\n        id: currentFoods[2]\n      },\n      id: 'lines'\n    }],\n    borderColor: {\n      from: 'color',\n      modifiers: [['darker', 1.6]]\n    },\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: 'Nutrients',\n      legendPosition: 'middle',\n      legendOffset: 32\n    },\n    axisLeft: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: 'food',\n      legendPosition: 'middle',\n      legendOffset: -40\n    },\n    labelSkipWidth: 12,\n    labelSkipHeight: 12,\n    labelTextColor: {\n      from: 'color',\n      modifiers: [['darker', 1.6]]\n    },\n    legends: [{\n      dataFrom: 'keys',\n      anchor: 'bottom-right',\n      direction: 'column',\n      justify: false,\n      translateX: 120,\n      translateY: 0,\n      itemsSpacing: 2,\n      itemWidth: 100,\n      itemHeight: 20,\n      itemDirection: 'left-to-right',\n      itemOpacity: 0.85,\n      symbolSize: 20,\n      effects: [{\n        on: 'hover',\n        style: {\n          itemOpacity: 1\n        }\n      }]\n    }],\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15,\n    theme: lineGraphSettings.theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default MyResponsiveBar;","map":{"version":3,"sources":["/Users/dea/Code/Projects/react_foodfacts2/experimental/client/src/Components/BarChart.js"],"names":["React","ResponsiveBar","makeStyles","Card","data","myData","realData","nutrient","apple","banana","kiwi","nuts","avocado","max","MyResponsiveBar","props","useStyles","root","maxWidth","minWidth","height","marginBottom","paddingBottom","lineGraphSettings","theme","fontSize","textColor","color","getFoods","Object","keys","filter","el","currentFoods","styles","top","right","bottom","left","scheme","id","type","background","size","padding","stagger","rotation","lineWidth","spacing","match","from","modifiers","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { ResponsiveBar } from '@nivo/bar'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card } from \"@material-ui/core\";\n\nconst data = [\n  {\n    \"country\": \"AD\",\n    \"hot dog\": 170,\n    \"hot dogColor\": \"hsl(161, 70%, 50%)\",\n    \"burger\": 116,\n    \"burgerColor\": \"hsl(296, 70%, 50%)\",\n    \"sandwich\": 17,\n    \"sandwichColor\": \"hsl(272, 70%, 50%)\",\n    \"kebab\": 186,\n    \"kebabColor\": \"hsl(268, 70%, 50%)\",\n    \"fries\": 61,\n    \"friesColor\": \"hsl(286, 70%, 50%)\",\n    \"donut\": 197,\n    \"donutColor\": \"hsl(132, 70%, 50%)\"\n  },\n  {\n    \"country\": \"AE\",\n    \"hot dog\": 10,\n    \"hot dogColor\": \"hsl(67, 70%, 50%)\",\n    \"burger\": 153,\n    \"burgerColor\": \"hsl(160, 70%, 50%)\",\n    \"sandwich\": 101,\n    \"sandwichColor\": \"hsl(81, 70%, 50%)\",\n    \"kebab\": 113,\n    \"kebabColor\": \"hsl(205, 70%, 50%)\",\n    \"fries\": 10,\n    \"friesColor\": \"hsl(82, 70%, 50%)\",\n    \"donut\": 85,\n    \"donutColor\": \"hsl(27, 70%, 50%)\"\n  },\n  {\n    \"country\": \"AF\",\n    \"hot dog\": 118,\n    \"hot dogColor\": \"hsl(184, 70%, 50%)\",\n    \"burger\": 90,\n    \"burgerColor\": \"hsl(22, 70%, 50%)\",\n    \"sandwich\": 62,\n    \"sandwichColor\": \"hsl(125, 70%, 50%)\",\n    \"kebab\": 97,\n    \"kebabColor\": \"hsl(179, 70%, 50%)\",\n    \"fries\": 13,\n    \"friesColor\": \"hsl(17, 70%, 50%)\",\n    \"donut\": 85,\n    \"donutColor\": \"hsl(21, 70%, 50%)\"\n  },\n  {\n    \"country\": \"AG\",\n    \"hot dog\": 8,\n    \"hot dogColor\": \"hsl(47, 70%, 50%)\",\n    \"burger\": 192,\n    \"burgerColor\": \"hsl(206, 70%, 50%)\",\n    \"sandwich\": 164,\n    \"sandwichColor\": \"hsl(56, 70%, 50%)\",\n    \"kebab\": 166,\n    \"kebabColor\": \"hsl(3, 70%, 50%)\",\n    \"fries\": 168,\n    \"friesColor\": \"hsl(126, 70%, 50%)\",\n    \"donut\": 76,\n    \"donutColor\": \"hsl(221, 70%, 50%)\"\n  },\n  {\n    \"country\": \"AI\",\n    \"hot dog\": 80,\n    \"hot dogColor\": \"hsl(153, 70%, 50%)\",\n    \"burger\": 195,\n    \"burgerColor\": \"hsl(122, 70%, 50%)\",\n    \"sandwich\": 93,\n    \"sandwichColor\": \"hsl(348, 70%, 50%)\",\n    \"kebab\": 193,\n    \"kebabColor\": \"hsl(356, 70%, 50%)\",\n    \"fries\": 124,\n    \"friesColor\": \"hsl(158, 70%, 50%)\",\n    \"donut\": 16,\n    \"donutColor\": \"hsl(124, 70%, 50%)\"\n  },\n  {\n    \"country\": \"AL\",\n    \"hot dog\": 2,\n    \"hot dogColor\": \"hsl(11, 70%, 50%)\",\n    \"burger\": 95,\n    \"burgerColor\": \"hsl(130, 70%, 50%)\",\n    \"sandwich\": 181,\n    \"sandwichColor\": \"hsl(148, 70%, 50%)\",\n    \"kebab\": 91,\n    \"kebabColor\": \"hsl(153, 70%, 50%)\",\n    \"fries\": 131,\n    \"friesColor\": \"hsl(7, 70%, 50%)\",\n    \"donut\": 75,\n    \"donutColor\": \"hsl(2, 70%, 50%)\"\n  },\n  {\n    \"country\": \"AM\",\n    \"hot dog\": 0,\n    \"hot dogColor\": \"hsl(284, 70%, 50%)\",\n    \"burger\": 96,\n    \"burgerColor\": \"hsl(307, 70%, 50%)\",\n    \"sandwich\": 95,\n    \"sandwichColor\": \"hsl(159, 70%, 50%)\",\n    \"kebab\": 37,\n    \"kebabColor\": \"hsl(299, 70%, 50%)\",\n    \"fries\": 37,\n    \"friesColor\": \"hsl(330, 70%, 50%)\",\n    \"donut\": 23,\n    \"donutColor\": \"hsl(288, 70%, 50%)\"\n  }\n]\n\n\nconst myData = [\n  {\n    \"country\": \"AF\",\n    \"hot dog\": 118,\n    \"hot dogColor\": \"hsl(184, 70%, 50%)\",\n    \"burger\": 90,\n    \"burgerColor\": \"hsl(22, 70%, 50%)\",\n    \"sandwich\": 62,\n    \"sandwichColor\": \"hsl(125, 70%, 50%)\",\n    \"kebab\": 97,\n    \"kebabColor\": \"hsl(179, 70%, 50%)\",\n    \"fries\": 13,\n    \"friesColor\": \"hsl(17, 70%, 50%)\",\n    \"donut\": 85,\n    \"donutColor\": \"hsl(21, 70%, 50%)\"\n  },\n  {\n    \"country\": \"AG\",\n    \"hot dog\": 8,\n    \"hot dogColor\": \"hsl(47, 70%, 50%)\",\n    \"burger\": 192,\n    \"burgerColor\": \"hsl(206, 70%, 50%)\",\n    \"sandwich\": 164,\n    \"sandwichColor\": \"hsl(56, 70%, 50%)\",\n    \"kebab\": 166,\n    \"kebabColor\": \"hsl(3, 70%, 50%)\",\n    \"fries\": 168,\n    \"friesColor\": \"hsl(126, 70%, 50%)\",\n    \"donut\": 76,\n    \"donutColor\": \"hsl(221, 70%, 50%)\"\n  },\n  {\n    \"country\": \"AI\",\n    \"hot dog\": 80,\n    \"hot dogColor\": \"hsl(153, 70%, 50%)\",\n    \"burger\": 195,\n    \"burgerColor\": \"hsl(122, 70%, 50%)\",\n    \"sandwich\": 93,\n    \"sandwichColor\": \"hsl(348, 70%, 50%)\",\n    \"kebab\": 193,\n    \"kebabColor\": \"hsl(356, 70%, 50%)\",\n    \"fries\": 124,\n    \"friesColor\": \"hsl(158, 70%, 50%)\",\n    \"donut\": 16,\n    \"donutColor\": \"hsl(124, 70%, 50%)\"\n  },\n  {\n    \"country\": \"AL\",\n    \"hot dog\": 2,\n    \"hot dogColor\": \"hsl(11, 70%, 50%)\",\n    \"burger\": 95,\n    \"burgerColor\": \"hsl(130, 70%, 50%)\",\n    \"sandwich\": 181,\n    \"sandwichColor\": \"hsl(148, 70%, 50%)\",\n    \"kebab\": 91,\n    \"kebabColor\": \"hsl(153, 70%, 50%)\",\n    \"fries\": 131,\n    \"friesColor\": \"hsl(7, 70%, 50%)\",\n    \"donut\": 75,\n    \"donutColor\": \"hsl(2, 70%, 50%)\"\n  },\n  {\n    \"country\": \"AM\",\n    \"hot dog\": 0,\n    \"hot dogColor\": \"hsl(284, 70%, 50%)\",\n    \"burger\": 96,\n    \"burgerColor\": \"hsl(307, 70%, 50%)\",\n    \"sandwich\": 95,\n    \"sandwichColor\": \"hsl(159, 70%, 50%)\",\n    \"kebab\": 37,\n    \"kebabColor\": \"hsl(299, 70%, 50%)\",\n    \"fries\": 37,\n    \"friesColor\": \"hsl(330, 70%, 50%)\",\n    \"donut\": 23,\n    \"donutColor\": \"hsl(288, 70%, 50%)\"\n  }\n]\n\nconst realData = [\n  {nutrient: \"calories\", apple: 52, banana: 50, kiwi: 61, nuts: 80, avocado: 30, max: 89},\n  {nutrient: \"fat\", apple: 0.17, banana: 0.33, kiwi: 50.52, nuts: 80, avocado: 30,max: 0.52},\n  {nutrient: \"carbs\", apple: 13.81, banana: 22.84, kiwi: 74.66, nuts: 80, avocado: 30,max: 22.84},\n  {nutrient: \"proteins\", apple: 0.26, banana: 81.09, kiwi: 1.14, nuts: 80, avocado: 30,max: 1.14},\n  {nutrient: \"fiber\", apple: 2.4, banana: 82.6, kiwi: 3, avocado: 30,max: 3}\n]\n\n/*\nfunction getFoods(dt){\n  return Object.keys(dt).filter(el => el!==\"nutrient\"&&el!==\"max\")\n}\n\nconst currentFoods = getFoods(realData[0])\nconsole.log(currentFoods)\n*/\n\n\n\n\n\n\n\nfunction MyResponsiveBar(props) {\n\n  const useStyles = makeStyles({\n    root: {\n      maxWidth: 600,\n      minWidth: 290,\n      height: 500,\n      marginBottom: 20,\n      paddingBottom: 30\n    }\n  })\n  \n  const lineGraphSettings = {\n    theme: {\n    fontSize: '14px',\n    textColor: props.color,\n    },\n    };\n\n  //array of the current foods \n  function getFoods(data){\n    return Object.keys(data).filter(el => el!==\"nutrient\"&&el!==\"max\")\n  }\n  const currentFoods = getFoods(props.data[0])\n\n  const styles = useStyles();\n\n  return (\n    <Card className={styles.root} elevation={6}>\n    <ResponsiveBar\n        data={props.data}\n        keys={currentFoods}\n        indexBy=\"nutrient\"\n        margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\n        padding={0.3}\n        colors={{ scheme: 'nivo' }}\n        defs={[\n            {\n                id: 'dots',\n                type: 'patternDots',\n                background: 'inherit',\n                color: '#38bcb2',\n                size: 4,\n                padding: 1,\n                stagger: true\n            },\n            {\n                id: 'lines',\n                type: 'patternLines',\n                background: 'inherit',\n                color: '#eed312',\n                rotation: -45,\n                lineWidth: 6,\n                spacing: 10\n            }\n        ]}\n        fill={[\n            {\n                match: {\n                    id: currentFoods[4]\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: currentFoods[2]\n                },\n                id: 'lines'\n            }\n        ]}\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'Nutrients',\n            legendPosition: 'middle',\n            legendOffset: 32\n        }}\n        axisLeft={{\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: 'food',\n            legendPosition: 'middle',\n            legendOffset: -40\n        }}\n        labelSkipWidth={12}\n        labelSkipHeight={12}\n        labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n        legends={[\n            {\n                dataFrom: 'keys',\n                anchor: 'bottom-right',\n                direction: 'column',\n                justify: false,\n                translateX: 120,\n                translateY: 0,\n                itemsSpacing: 2,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemDirection: 'left-to-right',\n                itemOpacity: 0.85,\n                symbolSize: 20,\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemOpacity: 1\n                        }\n                    }\n                ]\n            }\n        ]}\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n        theme={lineGraphSettings.theme}\n    />\n    </Card>\n  )\n}\n\nexport default MyResponsiveBar;"]},"metadata":{},"sourceType":"module"}