{"ast":null,"code":"import _defineProperty from\"/Users/dea/Code/Projects/react_foodfacts2/experimental/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React from\"react\";import{ResponsiveBar}from'@nivo/bar';import{makeStyles}from'@material-ui/core/styles';import{Card,CardContent,Typography}from\"@material-ui/core\";var data=[{\"country\":\"AD\",\"hot dog\":37,\"burger\":159,\"sandwich\":169,\"kebab\":15,\"fries\":148}];function MyResponsiveBar(props){var _colors;var useStyles=makeStyles({root:{maxWidth:1200,minWidth:200,height:150,paddingBottom:15,marginBottom:100,marginRight:10,marginLeft:10,background:'#3f3b3b',paddingTop:0,color:'white',opacity:0.90}});var styles=useStyles();//array of the current foods \nfunction getFoods(data){return Object.keys(data).filter(function(el){return el!==\"nutrient\"&&el!==\"max\";});}var currentFoods=getFoods(props.data[0]);var fills=[\"#f35588\",\"#71a95a\",\"#14b1ab\",\"#e8505b\",\"#f9d56e\"];var colors=(_colors={},_defineProperty(_colors,currentFoods[0],\"#DB5375\"),_defineProperty(_colors,currentFoods[1],\"#EC9192\"),_defineProperty(_colors,currentFoods[2],\"#f8dc88\"),_defineProperty(_colors,currentFoods[3],\"#B5BD89\"),_defineProperty(_colors,currentFoods[4],\"#729EA1\"),_colors);var getColor=function getColor(bar){return colors[bar.id];};var lineGraphSettings={theme:{fontSize:'14px',textColor:\"#eee\",itemTextColor:\"#eee\",tooltip:{container:{fontSize:\"14px\",color:\"black\"}}}};return/*#__PURE__*/React.createElement(Card,{className:styles.root,elevation:6},/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(Typography,{variant:\"h5\"},\"Calories\")),/*#__PURE__*/React.createElement(ResponsiveBar,{data:props.data.slice(0,1),keys:currentFoods,indexBy:\"nutrient\",margin:{top:0,right:15,bottom:50,left:15},padding:0.5,layout:\"horizontal\"//colors={{ scheme: 'nivo' }}\n,colors:getColor,colorBy:\"id\",defs:[{id:'dots',type:'patternDots',background:'inherit',color:'#38bcb2',size:4,padding:1,stagger:true},{id:'lines',type:'patternLines',background:'inherit',color:'#eed312',rotation:-45,lineWidth:6,spacing:10}],fill:[{match:{id:'fries'},id:'dots'},{match:{id:'sandwich'},id:'lines'}],borderColor:{from:'color',modifiers:[['darker',2]]},axisTop:null,axisRight:null,axisLeft:null,axisBottom:null,labelSkipWidth:12,labelSkipHeight:12,labelTextColor:{from:'color',modifiers:[['darker',2]]},legends:[{dataFrom:'keys',anchor:'top-right',direction:'row',justify:false,translateX:0,translateY:0,itemsSpacing:2,itemWidth:100,itemHeight:20,itemTextColor:'white',itemDirection:'left-to-right',itemOpacity:0.85,symbolSize:12,symbolShape:'circle',effects:[{on:'hover',style:{itemOpacity:1}}]}],animate:true,motionStiffness:90,motionDamping:15,theme:lineGraphSettings.theme}));}export default MyResponsiveBar;","map":{"version":3,"sources":["/Users/dea/Code/Projects/react_foodfacts2/experimental/client/src/Components/CaloriesChart.js"],"names":["React","ResponsiveBar","makeStyles","Card","CardContent","Typography","data","MyResponsiveBar","props","useStyles","root","maxWidth","minWidth","height","paddingBottom","marginBottom","marginRight","marginLeft","background","paddingTop","color","opacity","styles","getFoods","Object","keys","filter","el","currentFoods","fills","colors","getColor","bar","id","lineGraphSettings","theme","fontSize","textColor","itemTextColor","tooltip","container","slice","top","right","bottom","left","type","size","padding","stagger","rotation","lineWidth","spacing","match","from","modifiers","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","symbolShape","effects","on","style"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { ResponsiveBar } from '@nivo/bar'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\n\nconst data = [\n  {\n    \"country\": \"AD\",\n    \"hot dog\": 37,\n    \"burger\": 159,\n    \"sandwich\": 169,\n    \"kebab\": 15,\n    \"fries\": 148,\n  }]\n\n\nfunction MyResponsiveBar(props) {\n\n  const useStyles = makeStyles({\n    root: {\n      maxWidth: 1200,\n      minWidth: 200,\n      height: 150,\n      paddingBottom: 15,\n      marginBottom: 100,\n      marginRight: 10,\n      marginLeft: 10,\n      background: '#3f3b3b',\n      paddingTop: 0,\n      color: 'white',\n      opacity: 0.90\n    }\n  })\n  const styles = useStyles();\n\n\n\n    //array of the current foods \n    function getFoods(data){\n      return Object.keys(data).filter(el => el!==\"nutrient\"&&el!==\"max\")\n    }\n    const currentFoods = getFoods(props.data[0])\n  \n    const fills = [\"#f35588\", \"#71a95a\", \"#14b1ab\", \"#e8505b\", \"#f9d56e\"];\n    const colors = { \n      [currentFoods[0]]: \"#DB5375\", \n      [currentFoods[1]]: \"#EC9192\", \n      [currentFoods[2]]: \"#f8dc88\", \n      [currentFoods[3]]: \"#B5BD89\",\n      [currentFoods[4]]: \"#729EA1\",\n    }\n    const getColor = bar => colors[bar.id]\n\n  \n    const lineGraphSettings = {\n      theme: {\n      fontSize: '14px',\n      textColor: \"#eee\",\n      itemTextColor: \"#eee\",\n      tooltip: {\n        container: {\n        fontSize: \"14px\",\n        color: \"black\"\n        }}\n      },\n      };\n\n  return (\n    <Card className={styles.root} elevation={6}>\n    <CardContent><Typography variant=\"h5\">Calories</Typography></CardContent>\n    <ResponsiveBar\n        data={props.data.slice(0,1)}\n        keys={currentFoods}\n        indexBy=\"nutrient\"\n        margin={{ top: 0, right: 15, bottom: 50, left: 15 }}\n        padding={0.5}\n        layout=\"horizontal\"\n        //colors={{ scheme: 'nivo' }}\n        colors={getColor}\n        colorBy=\"id\"\n        defs={[\n            {\n                id: 'dots',\n                type: 'patternDots',\n                background: 'inherit',\n                color: '#38bcb2',\n                size: 4,\n                padding: 1,\n                stagger: true\n            },\n            {\n                id: 'lines',\n                type: 'patternLines',\n                background: 'inherit',\n                color: '#eed312',\n                rotation: -45,\n                lineWidth: 6,\n                spacing: 10\n            }\n        ]}\n        fill={[\n            {\n                match: {\n                    id: 'fries'\n                },\n                id: 'dots'\n            },\n            {\n                match: {\n                    id: 'sandwich'\n                },\n                id: 'lines'\n            }\n        ]}\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 2 ] ] }}\n        axisTop={null}\n        axisRight={null}\n        axisLeft={null}\n        axisBottom={null}\n\n        labelSkipWidth={12}\n        labelSkipHeight={12}\n        labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 2 ] ] }}\n        legends={[\n            {\n                dataFrom: 'keys',\n                anchor: 'top-right',\n                direction: 'row',\n                justify: false,\n                translateX: 0,\n                translateY: 0,\n                itemsSpacing: 2,\n                itemWidth: 100,\n                itemHeight: 20,\n                itemTextColor: 'white',\n                itemDirection: 'left-to-right',\n                itemOpacity: 0.85,\n                symbolSize: 12,\n                symbolShape: 'circle',\n                effects: [\n                    {\n                        on: 'hover',\n                        style: {\n                            itemOpacity: 1\n                        }\n                    }\n                ]\n            }\n        ]}\n        animate={true}\n        motionStiffness={90}\n        motionDamping={15}\n        theme={lineGraphSettings.theme}\n    />\n    </Card>\n  )\n}\n\nexport default MyResponsiveBar;"]},"metadata":{},"sourceType":"module"}